(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1055:function(t,n,e){"use strict";e.d(n,"a",(function(){return c}));function i(t,n,e,i){if(isNaN(n)||isNaN(e))return t;var r,u,o,c,a,s,f,h,l,p=t._root,_={data:i},b=t._x0,d=t._y0,v=t._x1,g=t._y1;if(!p)return t._root=_,t;for(;p.length;)if((s=n>=(u=(b+v)/2))?b=u:v=u,(f=e>=(o=(d+g)/2))?d=o:g=o,r=p,!(p=p[h=f<<1|s]))return r[h]=_,t;if(c=+t._x.call(null,p.data),a=+t._y.call(null,p.data),n===c&&e===a)return _.next=p,r?r[h]=_:t._root=_,t;do{r=r?r[h]=new Array(4):t._root=new Array(4),(s=n>=(u=(b+v)/2))?b=u:v=u,(f=e>=(o=(d+g)/2))?d=o:g=o}while((h=f<<1|s)==(l=(a>=o)<<1|c>=u));return r[l]=p,r[h]=_,t}var r=function(t,n,e,i,r){this.node=t,this.x0=n,this.y0=e,this.x1=i,this.y1=r};function u(t){return t[0]}function o(t){return t[1]}function c(t,n,e){var i=new a(null==n?u:n,null==e?o:e,NaN,NaN,NaN,NaN);return null==t?i:i.addAll(t)}function a(t,n,e,i,r,u){this._x=t,this._y=n,this._x0=e,this._y0=i,this._x1=r,this._y1=u,this._root=void 0}function s(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}var f=c.prototype=a.prototype;f.copy=function(){var t,n,e=new a(this._x,this._y,this._x0,this._y0,this._x1,this._y1),i=this._root;if(!i)return e;if(!i.length)return e._root=s(i),e;for(t=[{source:i,target:e._root=new Array(4)}];i=t.pop();)for(var r=0;r<4;++r)(n=i.source[r])&&(n.length?t.push({source:n,target:i.target[r]=new Array(4)}):i.target[r]=s(n));return e},f.add=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return i(this.cover(n,e),n,e,t)},f.addAll=function(t){var n,e,r,u,o=t.length,c=new Array(o),a=new Array(o),s=1/0,f=1/0,h=-1/0,l=-1/0;for(e=0;e<o;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(u=+this._y.call(null,n))||(c[e]=r,a[e]=u,r<s&&(s=r),r>h&&(h=r),u<f&&(f=u),u>l&&(l=u));if(s>h||f>l)return this;for(this.cover(s,f).cover(h,l),e=0;e<o;++e)i(this,c[e],a[e],t[e]);return this},f.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,i=this._y0,r=this._x1,u=this._y1;if(isNaN(e))r=(e=Math.floor(t))+1,u=(i=Math.floor(n))+1;else{for(var o,c,a=r-e,s=this._root;e>t||t>=r||i>n||n>=u;)switch(c=(n<i)<<1|t<e,(o=new Array(4))[c]=s,s=o,a*=2,c){case 0:r=e+a,u=i+a;break;case 1:e=r-a,u=i+a;break;case 2:r=e+a,i=u-a;break;case 3:e=r-a,i=u-a}this._root&&this._root.length&&(this._root=s)}return this._x0=e,this._y0=i,this._x1=r,this._y1=u,this},f.data=function(){var t=[];return this.visit((function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)})),t},f.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},f.find=function(t,n,e){var i,u,o,c,a,s,f,h=this._x0,l=this._y0,p=this._x1,_=this._y1,b=[],d=this._root;for(d&&b.push(new r(d,h,l,p,_)),null==e?e=1/0:(h=t-e,l=n-e,p=t+e,_=n+e,e*=e);s=b.pop();)if(!(!(d=s.node)||(u=s.x0)>p||(o=s.y0)>_||(c=s.x1)<h||(a=s.y1)<l))if(d.length){var v=(u+c)/2,g=(o+a)/2;b.push(new r(d[3],v,g,c,a),new r(d[2],u,g,v,a),new r(d[1],v,o,c,g),new r(d[0],u,o,v,g)),(f=(n>=g)<<1|t>=v)&&(s=b[b.length-1],b[b.length-1]=b[b.length-1-f],b[b.length-1-f]=s)}else{var y=t-+this._x.call(null,d.data),x=n-+this._y.call(null,d.data),j=y*y+x*x;if(j<e){var O=Math.sqrt(e=j);h=t-O,l=n-O,p=t+O,_=n+O,i=d.data}}return i},f.remove=function(t){if(isNaN(u=+this._x.call(null,t))||isNaN(o=+this._y.call(null,t)))return this;var n,e,i,r,u,o,c,a,s,f,h,l,p=this._root,_=this._x0,b=this._y0,d=this._x1,v=this._y1;if(!p)return this;if(p.length)for(;;){if((s=u>=(c=(_+d)/2))?_=c:d=c,(f=o>=(a=(b+v)/2))?b=a:v=a,n=p,!(p=p[h=f<<1|s]))return this;if(!p.length)break;(n[h+1&3]||n[h+2&3]||n[h+3&3])&&(e=n,l=h)}for(;p.data!==t;)if(i=p,!(p=p.next))return this;return(r=p.next)&&delete p.next,i?(r?i.next=r:delete i.next,this):n?(r?n[h]=r:delete n[h],(p=n[0]||n[1]||n[2]||n[3])&&p===(n[3]||n[2]||n[1]||n[0])&&!p.length&&(e?e[l]=p:this._root=p),this):(this._root=r,this)},f.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},f.root=function(){return this._root},f.size=function(){var t=0;return this.visit((function(n){if(!n.length)do{++t}while(n=n.next)})),t},f.visit=function(t){var n,e,i,u,o,c,a=[],s=this._root;for(s&&a.push(new r(s,this._x0,this._y0,this._x1,this._y1));n=a.pop();)if(!t(s=n.node,i=n.x0,u=n.y0,o=n.x1,c=n.y1)&&s.length){var f=(i+o)/2,h=(u+c)/2;(e=s[3])&&a.push(new r(e,f,h,o,c)),(e=s[2])&&a.push(new r(e,i,h,f,c)),(e=s[1])&&a.push(new r(e,f,u,o,h)),(e=s[0])&&a.push(new r(e,i,u,f,h))}return this},f.visitAfter=function(t){var n,e=[],i=[];for(this._root&&e.push(new r(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var u=n.node;if(u.length){var o,c=n.x0,a=n.y0,s=n.x1,f=n.y1,h=(c+s)/2,l=(a+f)/2;(o=u[0])&&e.push(new r(o,c,a,h,l)),(o=u[1])&&e.push(new r(o,h,a,s,l)),(o=u[2])&&e.push(new r(o,c,l,h,f)),(o=u[3])&&e.push(new r(o,h,l,s,f))}i.push(n)}for(;n=i.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},f.x=function(t){return arguments.length?(this._x=t,this):this._x},f.y=function(t){return arguments.length?(this._y=t,this):this._y}},1056:function(t,n,e){"use strict";var i,r,u,o,c=e(849),a=e(740),s=e(759),f=e(708),h=e(739),l=Object(s.a)(),p=Object(s.a)(),_={point:h.a,lineStart:h.a,lineEnd:h.a,polygonStart:function(){_.lineStart=b,_.lineEnd=g},polygonEnd:function(){_.lineStart=_.lineEnd=_.point=h.a,l.add(Object(f.a)(p)),p.reset()},result:function(){var t=l/2;return l.reset(),t}};function b(){_.point=d}function d(t,n){_.point=v,i=u=t,r=o=n}function v(t,n){p.add(o*t-u*n),u=t,o=n}function g(){v(i,r)}var y,x,j,O,w=_,m=e(946),M=0,T=0,N=0,S=0,E=0,k=0,C=0,A=0,U=0,D={point:q,lineStart:z,lineEnd:Y,polygonStart:function(){D.lineStart=H,D.lineEnd=L},polygonEnd:function(){D.point=q,D.lineStart=z,D.lineEnd=Y},result:function(){var t=U?[C/U,A/U]:k?[S/k,E/k]:N?[M/N,T/N]:[NaN,NaN];return M=T=N=S=E=k=C=A=U=0,t}};function q(t,n){M+=t,T+=n,++N}function z(){D.point=P}function P(t,n){D.point=F,q(j=t,O=n)}function F(t,n){var e=t-j,i=n-O,r=Object(f.u)(e*e+i*i);S+=r*(j+t)/2,E+=r*(O+n)/2,k+=r,q(j=t,O=n)}function Y(){D.point=q}function H(){D.point=R}function L(){B(y,x)}function R(t,n){D.point=B,q(y=j=t,x=O=n)}function B(t,n){var e=t-j,i=n-O,r=Object(f.u)(e*e+i*i);S+=r*(j+t)/2,E+=r*(O+n)/2,k+=r,C+=(r=O*t-j*n)*(j+t),A+=r*(O+n),U+=3*r,q(j=t,O=n)}var X=D;function I(t){this._context=t}I.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,f.w)}},result:h.a};var Z,V,$,W,J,Q=Object(s.a)(),G={point:h.a,lineStart:function(){G.point=K},lineEnd:function(){Z&&tt(V,$),G.point=h.a},polygonStart:function(){Z=!0},polygonEnd:function(){Z=null},result:function(){var t=+Q;return Q.reset(),t}};function K(t,n){G.point=tt,V=W=t,$=J=n}function tt(t,n){W-=t,J-=n,Q.add(Object(f.u)(W*W+J*J)),W=t,J=n}var nt=G;function et(){this._string=[]}function it(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}et.prototype={_radius:4.5,_circle:it(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:null==this._circle&&(this._circle=it(this._radius)),this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}};n.a=function(t,n){var e,i,r=4.5;function u(t){return t&&("function"==typeof r&&i.pointRadius(+r.apply(this,arguments)),Object(a.a)(t,e(i))),i.result()}return u.area=function(t){return Object(a.a)(t,e(w)),w.result()},u.measure=function(t){return Object(a.a)(t,e(nt)),nt.result()},u.bounds=function(t){return Object(a.a)(t,e(m.a)),m.a.result()},u.centroid=function(t){return Object(a.a)(t,e(X)),X.result()},u.projection=function(n){return arguments.length?(e=null==n?(t=null,c.a):(t=n).stream,u):t},u.context=function(t){return arguments.length?(i=null==t?(n=null,new et):new I(n=t),"function"!=typeof r&&i.pointRadius(r),u):n},u.pointRadius=function(t){return arguments.length?(r="function"==typeof t?t:(i.pointRadius(+t),+t),u):r},u.projection(t).context(n)}},708:function(t,n,e){"use strict";e.d(n,"i",(function(){return i})),e.d(n,"j",(function(){return r})),e.d(n,"o",(function(){return u})),e.d(n,"l",(function(){return o})),e.d(n,"q",(function(){return c})),e.d(n,"w",(function(){return a})),e.d(n,"h",(function(){return s})),e.d(n,"r",(function(){return f})),e.d(n,"a",(function(){return h})),e.d(n,"d",(function(){return l})),e.d(n,"e",(function(){return p})),e.d(n,"g",(function(){return _})),e.d(n,"f",(function(){return b})),e.d(n,"k",(function(){return d})),e.d(n,"n",(function(){return v})),e.d(n,"p",(function(){return g})),e.d(n,"t",(function(){return y})),e.d(n,"s",(function(){return x})),e.d(n,"u",(function(){return j})),e.d(n,"v",(function(){return O})),e.d(n,"b",(function(){return w})),e.d(n,"c",(function(){return m})),e.d(n,"m",(function(){return M}));var i=1e-6,r=1e-12,u=Math.PI,o=u/2,c=u/4,a=2*u,s=180/u,f=u/180,h=Math.abs,l=Math.atan,p=Math.atan2,_=Math.cos,b=Math.ceil,d=Math.exp,v=(Math.floor,Math.log),g=Math.pow,y=Math.sin,x=Math.sign||function(t){return t>0?1:t<0?-1:0},j=Math.sqrt,O=Math.tan;function w(t){return t>1?0:t<-1?u:Math.acos(t)}function m(t){return t>1?o:t<-1?-o:Math.asin(t)}function M(t){return(t=y(t/2))*t}},712:function(t,n,e){"use strict";e.d(n,"g",(function(){return o})),e.d(n,"c",(function(){return c})),e.d(n,"k",(function(){return a})),e.d(n,"m",(function(){return s})),e.d(n,"i",(function(){return f})),e.d(n,"a",(function(){return h})),e.d(n,"e",(function(){return l})),e.d(n,"h",(function(){return p})),e.d(n,"d",(function(){return _})),e.d(n,"l",(function(){return b})),e.d(n,"n",(function(){return d})),e.d(n,"j",(function(){return v})),e.d(n,"b",(function(){return g})),e.d(n,"f",(function(){return y}));var i=e(714),r=e(731);function u(t){return Object(i.a)((function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)}),(function(t,n){t.setDate(t.getDate()+7*n)}),(function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*r.c)/r.e}))}var o=u(0),c=u(1),a=u(2),s=u(3),f=u(4),h=u(5),l=u(6),p=o.range,_=c.range,b=a.range,d=s.range,v=f.range,g=h.range,y=l.range},713:function(t,n,e){"use strict";e.d(n,"g",(function(){return o})),e.d(n,"c",(function(){return c})),e.d(n,"k",(function(){return a})),e.d(n,"m",(function(){return s})),e.d(n,"i",(function(){return f})),e.d(n,"a",(function(){return h})),e.d(n,"e",(function(){return l})),e.d(n,"h",(function(){return p})),e.d(n,"d",(function(){return _})),e.d(n,"l",(function(){return b})),e.d(n,"n",(function(){return d})),e.d(n,"j",(function(){return v})),e.d(n,"b",(function(){return g})),e.d(n,"f",(function(){return y}));var i=e(714),r=e(731);function u(t){return Object(i.a)((function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCDate(t.getUTCDate()+7*n)}),(function(t,n){return(n-t)/r.e}))}var o=u(0),c=u(1),a=u(2),s=u(3),f=u(4),h=u(5),l=u(6),p=o.range,_=c.range,b=a.range,d=s.range,v=f.range,g=h.range,y=l.range},714:function(t,n,e){"use strict";e.d(n,"a",(function(){return u}));var i=new Date,r=new Date;function u(t,n,e,o){function c(n){return t(n=0===arguments.length?new Date:new Date(+n)),n}return c.floor=function(n){return t(n=new Date(+n)),n},c.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},c.round=function(t){var n=c(t),e=c.ceil(t);return t-n<e-t?n:e},c.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},c.range=function(e,i,r){var u,o=[];if(e=c.ceil(e),r=null==r?1:Math.floor(r),!(e<i&&r>0))return o;do{o.push(u=new Date(+e)),n(e,r),t(e)}while(u<e&&e<i);return o},c.filter=function(e){return u((function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)}),(function(t,i){if(t>=t)if(i<0)for(;++i<=0;)for(;n(t,-1),!e(t););else for(;--i>=0;)for(;n(t,1),!e(t););}))},e&&(c.count=function(n,u){return i.setTime(+n),r.setTime(+u),t(i),t(r),Math.floor(e(i,r))},c.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?c.filter(o?function(n){return o(n)%t==0}:function(n){return c.count(0,n)%t==0}):c:null}),c}},715:function(t,n,e){"use strict";e.r(n),e.d(n,"interpolate",(function(){return i.a})),e.d(n,"interpolateArray",(function(){return r.a})),e.d(n,"interpolateBasis",(function(){return u.b})),e.d(n,"interpolateBasisClosed",(function(){return o.a})),e.d(n,"interpolateDate",(function(){return c.a})),e.d(n,"interpolateDiscrete",(function(){return a})),e.d(n,"interpolateHue",(function(){return f})),e.d(n,"interpolateNumber",(function(){return h.a})),e.d(n,"interpolateNumberArray",(function(){return l.a})),e.d(n,"interpolateObject",(function(){return p.a})),e.d(n,"interpolateRound",(function(){return _.a})),e.d(n,"interpolateString",(function(){return b.a})),e.d(n,"interpolateTransformCss",(function(){return d.a})),e.d(n,"interpolateTransformSvg",(function(){return d.b})),e.d(n,"interpolateZoom",(function(){return v.a})),e.d(n,"interpolateRgb",(function(){return g.a})),e.d(n,"interpolateRgbBasis",(function(){return g.b})),e.d(n,"interpolateRgbBasisClosed",(function(){return g.c})),e.d(n,"interpolateHsl",(function(){return j})),e.d(n,"interpolateHslLong",(function(){return O})),e.d(n,"interpolateLab",(function(){return m})),e.d(n,"interpolateHcl",(function(){return T})),e.d(n,"interpolateHclLong",(function(){return N})),e.d(n,"interpolateCubehelix",(function(){return S.b})),e.d(n,"interpolateCubehelixLong",(function(){return S.a})),e.d(n,"piecewise",(function(){return E.a})),e.d(n,"quantize",(function(){return k}));var i=e(797),r=e(842),u=e(796),o=e(839),c=e(841),a=function(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}},s=e(758),f=function(t,n){var e=Object(s.c)(+t,+n);return function(t){var n=e(t);return n-360*Math.floor(n/360)}},h=e(774),l=e(798),p=e(843),_=e(960),b=e(840),d=e(923),v=e(961),g=e(775),y=e(757);function x(t){return function(n,e){var i=t((n=Object(y.f)(n)).h,(e=Object(y.f)(e)).h),r=Object(s.a)(n.s,e.s),u=Object(s.a)(n.l,e.l),o=Object(s.a)(n.opacity,e.opacity);return function(t){return n.h=i(t),n.s=r(t),n.l=u(t),n.opacity=o(t),n+""}}}var j=x(s.c),O=x(s.a),w=e(776);function m(t,n){var e=Object(s.a)((t=Object(w.a)(t)).l,(n=Object(w.a)(n)).l),i=Object(s.a)(t.a,n.a),r=Object(s.a)(t.b,n.b),u=Object(s.a)(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=i(n),t.b=r(n),t.opacity=u(n),t+""}}function M(t){return function(n,e){var i=t((n=Object(w.c)(n)).h,(e=Object(w.c)(e)).h),r=Object(s.a)(n.c,e.c),u=Object(s.a)(n.l,e.l),o=Object(s.a)(n.opacity,e.opacity);return function(t){return n.h=i(t),n.c=r(t),n.l=u(t),n.opacity=o(t),n+""}}}var T=M(s.c),N=M(s.a),S=e(865),E=e(962),k=function(t,n){for(var e=new Array(n),i=0;i<n;++i)e[i]=t(i/(n-1));return e}},719:function(t,n,e){"use strict";e.d(n,"a",(function(){return g})),e.d(n,"b",(function(){return y}));var i=e(846),r=e(847),u=e(794),o=e(940),c=e(849),a=e(708),s=e(778),f=e(779),h=e(852),l=e(777),p=Object(a.g)(30*a.r),_=function(t,n){return+n?function(t,n){function e(i,r,u,o,c,s,f,h,l,_,b,d,v,g){var y=f-i,x=h-r,j=y*y+x*x;if(j>4*n&&v--){var O=o+_,w=c+b,m=s+d,M=Object(a.u)(O*O+w*w+m*m),T=Object(a.c)(m/=M),N=Object(a.a)(Object(a.a)(m)-1)<a.i||Object(a.a)(u-l)<a.i?(u+l)/2:Object(a.e)(w,O),S=t(N,T),E=S[0],k=S[1],C=E-i,A=k-r,U=x*C-y*A;(U*U/j>n||Object(a.a)((y*C+x*A)/j-.5)>.3||o*_+c*b+s*d<p)&&(e(i,r,u,o,c,s,E,k,N,O/=M,w/=M,m,v,g),g.point(E,k),e(E,k,N,O,w,m,f,h,l,_,b,d,v,g))}}return function(n){var i,r,u,o,c,a,s,f,h,p,_,b,d={point:v,lineStart:g,lineEnd:x,polygonStart:function(){n.polygonStart(),d.lineStart=j},polygonEnd:function(){n.polygonEnd(),d.lineStart=g}};function v(e,i){e=t(e,i),n.point(e[0],e[1])}function g(){f=NaN,d.point=y,n.lineStart()}function y(i,r){var u=Object(l.a)([i,r]),o=t(i,r);e(f,h,s,p,_,b,f=o[0],h=o[1],s=i,p=u[0],_=u[1],b=u[2],16,n),n.point(f,h)}function x(){d.point=v,n.lineEnd()}function j(){g(),d.point=O,d.lineEnd=w}function O(t,n){y(i=t,n),r=f,u=h,o=p,c=_,a=b,d.point=y}function w(){e(f,h,s,p,_,b,r,u,i,o,c,a,16,n),d.lineEnd=x,x()}return d}}(t,n):function(t){return Object(f.b)({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)};var b=Object(f.b)({point:function(t,n){this.stream.point(t*a.r,n*a.r)}});function d(t,n,e,i,r){function u(u,o){return[n+t*(u*=i),e-t*(o*=r)]}return u.invert=function(u,o){return[(u-n)/t*i,(e-o)/t*r]},u}function v(t,n,e,i,r,u){var o=Object(a.g)(u),c=Object(a.t)(u),s=o*t,f=c*t,h=o/t,l=c/t,p=(c*e-o*n)/t,_=(c*n+o*e)/t;function b(t,u){return[s*(t*=i)-f*(u*=r)+n,e-f*t-s*u]}return b.invert=function(t,n){return[i*(h*t-l*n+p),r*(_-l*t-h*n)]},b}function g(t){return y((function(){return t}))()}function y(t){var n,e,l,p,g,y,x,j,O,w,m=150,M=480,T=250,N=0,S=0,E=0,k=0,C=0,A=0,U=1,D=1,q=null,z=i.a,P=null,F=c.a,Y=.5;function H(t){return j(t[0]*a.r,t[1]*a.r)}function L(t){return(t=j.invert(t[0],t[1]))&&[t[0]*a.h,t[1]*a.h]}function R(){var t=v(m,0,0,U,D,A).apply(null,n(N,S)),i=(A?v:d)(m,M-t[0],T-t[1],U,D,A);return e=Object(s.b)(E,k,C),x=Object(o.a)(n,i),j=Object(o.a)(e,x),y=_(x,Y),B()}function B(){return O=w=null,H}return H.stream=function(t){return O&&w===t?O:O=b(function(t){return Object(f.b)({point:function(n,e){var i=t(n,e);return this.stream.point(i[0],i[1])}})}(e)(z(y(F(w=t)))))},H.preclip=function(t){return arguments.length?(z=t,q=void 0,B()):z},H.postclip=function(t){return arguments.length?(F=t,P=l=p=g=null,B()):F},H.clipAngle=function(t){return arguments.length?(z=+t?Object(r.a)(q=t*a.r):(q=null,i.a),B()):q*a.h},H.clipExtent=function(t){return arguments.length?(F=null==t?(P=l=p=g=null,c.a):Object(u.a)(P=+t[0][0],l=+t[0][1],p=+t[1][0],g=+t[1][1]),B()):null==P?null:[[P,l],[p,g]]},H.scale=function(t){return arguments.length?(m=+t,R()):m},H.translate=function(t){return arguments.length?(M=+t[0],T=+t[1],R()):[M,T]},H.center=function(t){return arguments.length?(N=t[0]%360*a.r,S=t[1]%360*a.r,R()):[N*a.h,S*a.h]},H.rotate=function(t){return arguments.length?(E=t[0]%360*a.r,k=t[1]%360*a.r,C=t.length>2?t[2]%360*a.r:0,R()):[E*a.h,k*a.h,C*a.h]},H.angle=function(t){return arguments.length?(A=t%360*a.r,R()):A*a.h},H.reflectX=function(t){return arguments.length?(U=t?-1:1,R()):U<0},H.reflectY=function(t){return arguments.length?(D=t?-1:1,R()):D<0},H.precision=function(t){return arguments.length?(y=_(x,Y=t*t),B()):Object(a.u)(Y)},H.fitExtent=function(t,n){return Object(h.a)(H,t,n)},H.fitSize=function(t,n){return Object(h.c)(H,t,n)},H.fitWidth=function(t,n){return Object(h.d)(H,t,n)},H.fitHeight=function(t,n){return Object(h.b)(H,t,n)},function(){return n=t.apply(this,arguments),H.invert=n.invert&&L,R()}}},731:function(t,n,e){"use strict";e.d(n,"d",(function(){return i})),e.d(n,"c",(function(){return r})),e.d(n,"b",(function(){return u})),e.d(n,"a",(function(){return o})),e.d(n,"e",(function(){return c}));var i=1e3,r=6e4,u=36e5,o=864e5,c=6048e5},739:function(t,n,e){"use strict";function i(){}e.d(n,"a",(function(){return i}))},740:function(t,n,e){"use strict";function i(t,n){t&&u.hasOwnProperty(t.type)&&u[t.type](t,n)}var r={Feature:function(t,n){i(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,u=e.length;++r<u;)i(e[r].geometry,n)}},u={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,i=-1,r=e.length;++i<r;)t=e[i],n.point(t[0],t[1],t[2])},LineString:function(t,n){o(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,i=-1,r=e.length;++i<r;)o(e[i],n,0)},Polygon:function(t,n){c(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,i=-1,r=e.length;++i<r;)c(e[i],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,u=e.length;++r<u;)i(e[r],n)}};function o(t,n,e){var i,r=-1,u=t.length-e;for(n.lineStart();++r<u;)i=t[r],n.point(i[0],i[1],i[2]);n.lineEnd()}function c(t,n){var e=-1,i=t.length;for(n.polygonStart();++e<i;)o(t[e],n,1);n.polygonEnd()}n.a=function(t,n){t&&r.hasOwnProperty(t.type)?r[t.type](t,n):i(t,n)}},742:function(t,n,e){"use strict";e.d(n,"b",(function(){return r})),e.d(n,"c",(function(){return u})),e.d(n,"d",(function(){return o})),e.d(n,"e",(function(){return c})),e.d(n,"a",(function(){return s}));var i,r,u,o,c,a=e(871);function s(t){return i=Object(a.a)(t),r=i.format,u=i.parse,o=i.utcFormat,c=i.utcParse,i}s({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]})},748:function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},756:function(t,n,e){"use strict";e.d(n,"b",(function(){return p})),e.d(n,"a",(function(){return b})),e.d(n,"c",(function(){return d})),e.d(n,"d",(function(){return v}));var i,r,u=0,o=0,c=0,a=0,s=0,f=0,h="object"==typeof performance&&performance.now?performance:Date,l="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function p(){return s||(l(_),s=h.now()+f)}function _(){s=0}function b(){this._call=this._time=this._next=null}function d(t,n,e){var i=new b;return i.restart(t,n,e),i}function v(){p(),++u;for(var t,n=i;n;)(t=s-n._time)>=0&&n._call.call(null,t),n=n._next;--u}function g(){s=(a=h.now())+f,u=o=0;try{v()}finally{u=0,function(){var t,n,e=i,u=1/0;for(;e;)e._call?(u>e._time&&(u=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:i=n);r=t,x(u)}(),s=0}}function y(){var t=h.now(),n=t-a;n>1e3&&(f-=n,a=t)}function x(t){u||(o&&(o=clearTimeout(o)),t-s>24?(t<1/0&&(o=setTimeout(g,t-h.now()-f)),c&&(c=clearInterval(c))):(c||(a=h.now(),c=setInterval(y,1e3)),u=1,l(g)))}b.prototype=d.prototype={constructor:b,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?p():+e)+(null==n?0:+n),this._next||r===this||(r?r._next=this:i=this,r=this),this._call=t,this._time=e,x()},stop:function(){this._call&&(this._call=null,this._time=1/0,x())}}},757:function(t,n,e){"use strict";e.d(n,"a",(function(){return r})),e.d(n,"d",(function(){return u})),e.d(n,"c",(function(){return o})),e.d(n,"e",(function(){return x})),e.d(n,"h",(function(){return w})),e.d(n,"g",(function(){return m})),e.d(n,"b",(function(){return M})),e.d(n,"f",(function(){return C}));var i=e(838);function r(){}var u=.7,o=1/u,c="\\s*([+-]?\\d+)\\s*",a="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",s="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",f=/^#([0-9a-f]{3,8})$/,h=new RegExp("^rgb\\("+[c,c,c]+"\\)$"),l=new RegExp("^rgb\\("+[s,s,s]+"\\)$"),p=new RegExp("^rgba\\("+[c,c,c,a]+"\\)$"),_=new RegExp("^rgba\\("+[s,s,s,a]+"\\)$"),b=new RegExp("^hsl\\("+[a,s,s]+"\\)$"),d=new RegExp("^hsla\\("+[a,s,s,a]+"\\)$"),v={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function g(){return this.rgb().formatHex()}function y(){return this.rgb().formatRgb()}function x(t){var n,e;return t=(t+"").trim().toLowerCase(),(n=f.exec(t))?(e=n[1].length,n=parseInt(n[1],16),6===e?j(n):3===e?new M(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):8===e?O(n>>24&255,n>>16&255,n>>8&255,(255&n)/255):4===e?O(n>>12&15|n>>8&240,n>>8&15|n>>4&240,n>>4&15|240&n,((15&n)<<4|15&n)/255):null):(n=h.exec(t))?new M(n[1],n[2],n[3],1):(n=l.exec(t))?new M(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=p.exec(t))?O(n[1],n[2],n[3],n[4]):(n=_.exec(t))?O(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=b.exec(t))?E(n[1],n[2]/100,n[3]/100,1):(n=d.exec(t))?E(n[1],n[2]/100,n[3]/100,n[4]):v.hasOwnProperty(t)?j(v[t]):"transparent"===t?new M(NaN,NaN,NaN,0):null}function j(t){return new M(t>>16&255,t>>8&255,255&t,1)}function O(t,n,e,i){return i<=0&&(t=n=e=NaN),new M(t,n,e,i)}function w(t){return t instanceof r||(t=x(t)),t?new M((t=t.rgb()).r,t.g,t.b,t.opacity):new M}function m(t,n,e,i){return 1===arguments.length?w(t):new M(t,n,e,null==i?1:i)}function M(t,n,e,i){this.r=+t,this.g=+n,this.b=+e,this.opacity=+i}function T(){return"#"+S(this.r)+S(this.g)+S(this.b)}function N(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function S(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function E(t,n,e,i){return i<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new A(t,n,e,i)}function k(t){if(t instanceof A)return new A(t.h,t.s,t.l,t.opacity);if(t instanceof r||(t=x(t)),!t)return new A;if(t instanceof A)return t;var n=(t=t.rgb()).r/255,e=t.g/255,i=t.b/255,u=Math.min(n,e,i),o=Math.max(n,e,i),c=NaN,a=o-u,s=(o+u)/2;return a?(c=n===o?(e-i)/a+6*(e<i):e===o?(i-n)/a+2:(n-e)/a+4,a/=s<.5?o+u:2-o-u,c*=60):a=s>0&&s<1?0:c,new A(c,a,s,t.opacity)}function C(t,n,e,i){return 1===arguments.length?k(t):new A(t,n,e,null==i?1:i)}function A(t,n,e,i){this.h=+t,this.s=+n,this.l=+e,this.opacity=+i}function U(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Object(i.a)(r,x,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:g,formatHex:g,formatHsl:function(){return k(this).formatHsl()},formatRgb:y,toString:y}),Object(i.a)(M,m,Object(i.b)(r,{brighter:function(t){return t=null==t?o:Math.pow(o,t),new M(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?u:Math.pow(u,t),new M(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:T,formatHex:T,formatRgb:N,toString:N})),Object(i.a)(A,C,Object(i.b)(r,{brighter:function(t){return t=null==t?o:Math.pow(o,t),new A(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?u:Math.pow(u,t),new A(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,i=e+(e<.5?e:1-e)*n,r=2*e-i;return new M(U(t>=240?t-240:t+120,r,i),U(t,r,i),U(t<120?t+240:t-120,r,i),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}))},758:function(t,n,e){"use strict";e.d(n,"c",(function(){return u})),e.d(n,"b",(function(){return o})),e.d(n,"a",(function(){return c}));var i=e(931);function r(t,n){return function(e){return t+e*n}}function u(t,n){var e=n-t;return e?r(t,e>180||e<-180?e-360*Math.round(e/360):e):Object(i.a)(isNaN(t)?n:t)}function o(t){return 1==(t=+t)?c:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(i){return Math.pow(t+i*n,e)}}(n,e,t):Object(i.a)(isNaN(n)?e:n)}}function c(t,n){var e=n-t;return e?r(t,e):Object(i.a)(isNaN(t)?n:t)}},759:function(t,n,e){"use strict";function i(){this.reset()}n.a=function(){return new i},i.prototype={constructor:i,reset:function(){this.s=this.t=0},add:function(t){u(r,t,this.t),u(this,r.s,this.s),this.s?this.t+=r.t:this.s=r.t},valueOf:function(){return this.s}};var r=new i;function u(t,n,e){var i=t.s=n+e,r=i-n,u=i-r;t.t=n-u+(e-r)}},760:function(t,n,e){"use strict";n.a=function(t,n,e,i,r){for(var u,o=t.children,c=-1,a=o.length,s=t.value&&(i-n)/t.value;++c<a;)(u=o[c]).y0=e,u.y1=r,u.x0=n,u.x1=n+=u.value*s}},774:function(t,n,e){"use strict";n.a=function(t,n){return t=+t,n=+n,function(e){return t*(1-e)+n*e}}},775:function(t,n,e){"use strict";e.d(n,"b",(function(){return a})),e.d(n,"c",(function(){return s}));var i=e(757),r=e(796),u=e(839),o=e(758);function c(t){return function(n){var e,r,u=n.length,o=new Array(u),c=new Array(u),a=new Array(u);for(e=0;e<u;++e)r=Object(i.g)(n[e]),o[e]=r.r||0,c[e]=r.g||0,a[e]=r.b||0;return o=t(o),c=t(c),a=t(a),r.opacity=1,function(t){return r.r=o(t),r.g=c(t),r.b=a(t),r+""}}}n.a=function t(n){var e=Object(o.b)(n);function r(t,n){var r=e((t=Object(i.g)(t)).r,(n=Object(i.g)(n)).r),u=e(t.g,n.g),c=e(t.b,n.b),a=Object(o.a)(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=u(n),t.b=c(n),t.opacity=a(n),t+""}}return r.gamma=t,r}(1);var a=c(r.b),s=c(u.a)},776:function(t,n,e){"use strict";e.d(n,"b",(function(){return s})),e.d(n,"a",(function(){return f})),e.d(n,"d",(function(){return v})),e.d(n,"c",(function(){return g}));var i=e(838),r=e(757),u=e(933),o=6/29,c=3*o*o;function a(t){if(t instanceof h)return new h(t.l,t.a,t.b,t.opacity);if(t instanceof y)return x(t);t instanceof r.b||(t=Object(r.h)(t));var n,e,i=b(t.r),u=b(t.g),o=b(t.b),c=l((.2225045*i+.7168786*u+.0606169*o)/1);return i===u&&u===o?n=e=c:(n=l((.4360747*i+.3850649*u+.1430804*o)/.96422),e=l((.0139322*i+.0971045*u+.7141733*o)/.82521)),new h(116*c-16,500*(n-c),200*(c-e),t.opacity)}function s(t,n){return new h(t,0,0,null==n?1:n)}function f(t,n,e,i){return 1===arguments.length?a(t):new h(t,n,e,null==i?1:i)}function h(t,n,e,i){this.l=+t,this.a=+n,this.b=+e,this.opacity=+i}function l(t){return t>.008856451679035631?Math.pow(t,1/3):t/c+4/29}function p(t){return t>o?t*t*t:c*(t-4/29)}function _(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function b(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function d(t){if(t instanceof y)return new y(t.h,t.c,t.l,t.opacity);if(t instanceof h||(t=a(t)),0===t.a&&0===t.b)return new y(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*u.b;return new y(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function v(t,n,e,i){return 1===arguments.length?d(t):new y(e,n,t,null==i?1:i)}function g(t,n,e,i){return 1===arguments.length?d(t):new y(t,n,e,null==i?1:i)}function y(t,n,e,i){this.h=+t,this.c=+n,this.l=+e,this.opacity=+i}function x(t){if(isNaN(t.h))return new h(t.l,0,0,t.opacity);var n=t.h*u.a;return new h(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}Object(i.a)(h,f,Object(i.b)(r.a,{brighter:function(t){return new h(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new h(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return n=.96422*p(n),t=1*p(t),e=.82521*p(e),new r.b(_(3.1338561*n-1.6168667*t-.4906146*e),_(-.9787684*n+1.9161415*t+.033454*e),_(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),Object(i.a)(y,g,Object(i.b)(r.a,{brighter:function(t){return new y(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new y(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return x(this).rgb()}}))},777:function(t,n,e){"use strict";e.d(n,"g",(function(){return r})),e.d(n,"a",(function(){return u})),e.d(n,"d",(function(){return o})),e.d(n,"c",(function(){return c})),e.d(n,"b",(function(){return a})),e.d(n,"f",(function(){return s})),e.d(n,"e",(function(){return f}));var i=e(708);function r(t){return[Object(i.e)(t[1],t[0]),Object(i.c)(t[2])]}function u(t){var n=t[0],e=t[1],r=Object(i.g)(e);return[r*Object(i.g)(n),r*Object(i.t)(n),Object(i.t)(e)]}function o(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function c(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function a(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function s(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function f(t){var n=Object(i.u)(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}},778:function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var i=e(940),r=e(708);function u(t,n){return[Object(r.a)(t)>r.o?t+Math.round(-t/r.w)*r.w:t,n]}function o(t,n,e){return(t%=r.w)?n||e?Object(i.a)(a(t),s(n,e)):a(t):n||e?s(n,e):u}function c(t){return function(n,e){return[(n+=t)>r.o?n-r.w:n<-r.o?n+r.w:n,e]}}function a(t){var n=c(t);return n.invert=c(-t),n}function s(t,n){var e=Object(r.g)(t),i=Object(r.t)(t),u=Object(r.g)(n),o=Object(r.t)(n);function c(t,n){var c=Object(r.g)(n),a=Object(r.g)(t)*c,s=Object(r.t)(t)*c,f=Object(r.t)(n),h=f*e+a*i;return[Object(r.e)(s*u-h*o,a*e-f*i),Object(r.c)(h*u+s*o)]}return c.invert=function(t,n){var c=Object(r.g)(n),a=Object(r.g)(t)*c,s=Object(r.t)(t)*c,f=Object(r.t)(n),h=f*u-s*o;return[Object(r.e)(s*u+f*o,a*e+h*i),Object(r.c)(h*e-a*i)]},c}u.invert=u,n.a=function(t){function n(n){return(n=t(n[0]*r.r,n[1]*r.r))[0]*=r.h,n[1]*=r.h,n}return t=o(t[0]*r.r,t[1]*r.r,t.length>2?t[2]*r.r:0),n.invert=function(n){return(n=t.invert(n[0]*r.r,n[1]*r.r))[0]*=r.h,n[1]*=r.h,n},n}},779:function(t,n,e){"use strict";function i(t){return function(n){var e=new r;for(var i in t)e[i]=t[i];return e.stream=n,e}}function r(){}e.d(n,"b",(function(){return i})),n.a=function(t){return{stream:i(t)}},r.prototype={constructor:r,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}}},780:function(t,n,e){"use strict";e.d(n,"b",(function(){return r})),e.d(n,"a",(function(){return u}));var i=e(708);function r(t){return function(n,e){var r=Object(i.g)(n),u=Object(i.g)(e),o=t(r*u);return[o*u*Object(i.t)(n),o*Object(i.t)(e)]}}function u(t){return function(n,e){var r=Object(i.u)(n*n+e*e),u=t(r),o=Object(i.t)(u),c=Object(i.g)(u);return[Object(i.e)(n*o,r*c),Object(i.c)(r&&e*o/r)]}}},781:function(t,n,e){"use strict";e.d(n,"c",(function(){return o})),e.d(n,"b",(function(){return c}));var i=e(708),r=e(778),u=e(719);function o(t,n){return[t,Object(i.n)(Object(i.v)((i.l+n)/2))]}function c(t){var n,e,c,a=Object(u.a)(t),s=a.center,f=a.scale,h=a.translate,l=a.clipExtent,p=null;function _(){var u=i.o*f(),s=a(Object(r.a)(a.rotate()).invert([0,0]));return l(null==p?[[s[0]-u,s[1]-u],[s[0]+u,s[1]+u]]:t===o?[[Math.max(s[0]-u,p),n],[Math.min(s[0]+u,e),c]]:[[p,Math.max(s[1]-u,n)],[e,Math.min(s[1]+u,c)]])}return a.scale=function(t){return arguments.length?(f(t),_()):f()},a.translate=function(t){return arguments.length?(h(t),_()):h()},a.center=function(t){return arguments.length?(s(t),_()):s()},a.clipExtent=function(t){return arguments.length?(null==t?p=n=e=c=null:(p=+t[0][0],n=+t[0][1],e=+t[1][0],c=+t[1][1]),_()):null==p?null:[[p,n],[e,c]]},_()}o.invert=function(t,n){return[t,2*Object(i.d)(Object(i.k)(n))-i.l]},n.a=function(){return c(o).scale(961/i.w)}},782:function(t,n,e){"use strict";n.a=function(t,n,e,i,r){for(var u,o=t.children,c=-1,a=o.length,s=t.value&&(r-e)/t.value;++c<a;)(u=o[c]).x0=n,u.x1=i,u.y0=e,u.y1=e+=u.value*s}},783:function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var i=e(714),r=e(731),u=Object(i.a)((function(t){t.setTime(t-t.getMilliseconds())}),(function(t,n){t.setTime(+t+n*r.d)}),(function(t,n){return(n-t)/r.d}),(function(t){return t.getUTCSeconds()}));n.a=u;var o=u.range},784:function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var i=e(714),r=Object(i.a)((function(){}),(function(t,n){t.setTime(+t+n)}),(function(t,n){return n-t}));r.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Object(i.a)((function(n){n.setTime(Math.floor(n/t)*t)}),(function(n,e){n.setTime(+n+e*t)}),(function(n,e){return(e-n)/t})):r:null},n.a=r;var u=r.range},785:function(t,n,e){"use strict";e.d(n,"a",(function(){return i})),e.d(n,"d",(function(){return r})),e.d(n,"e",(function(){return u})),e.d(n,"h",(function(){return o})),e.d(n,"i",(function(){return c})),e.d(n,"k",(function(){return a})),e.d(n,"l",(function(){return s})),e.d(n,"f",(function(){return f})),e.d(n,"j",(function(){return h})),e.d(n,"g",(function(){return l})),e.d(n,"m",(function(){return p})),e.d(n,"b",(function(){return _})),e.d(n,"c",(function(){return b}));var i=Math.abs,r=Math.atan2,u=Math.cos,o=Math.max,c=Math.min,a=Math.sin,s=Math.sqrt,f=1e-12,h=Math.PI,l=h/2,p=2*h;function _(t){return t>1?0:t<-1?h:Math.acos(t)}function b(t){return t>=1?l:t<=-1?-l:Math.asin(t)}},786:function(t,n,e){"use strict";function i(t){this._context=t}i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}},n.a=function(t){return new i(t)}},787:function(t,n,e){"use strict";function i(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function r(t){this._context=t}e.d(n,"c",(function(){return i})),e.d(n,"a",(function(){return r})),r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:i(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:i(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},n.b=function(t){return new r(t)}},788:function(t,n,e){"use strict";function i(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function r(t,n){this._context=t,this._k=(1-n)/6}e.d(n,"c",(function(){return i})),e.d(n,"a",(function(){return r})),r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:i(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:i(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.b=function t(n){function e(t){return new r(t,n)}return e.tension=function(n){return t(+n)},e}(0)},794:function(t,n,e){"use strict";e.d(n,"a",(function(){return c}));var i=e(708),r=e(942),u=e(944),o=e(921);function c(t,n,e,c){function a(i,r){return t<=i&&i<=e&&n<=r&&r<=c}function s(i,r,u,o){var a=0,s=0;if(null==i||(a=f(i,u))!==(s=f(r,u))||l(i,r)<0^u>0)do{o.point(0===a||3===a?t:e,a>1?c:n)}while((a=(a+u+4)%4)!==s);else o.point(r[0],r[1])}function f(r,u){return Object(i.a)(r[0]-t)<i.i?u>0?0:3:Object(i.a)(r[0]-e)<i.i?u>0?2:1:Object(i.a)(r[1]-n)<i.i?u>0?1:0:u>0?3:2}function h(t,n){return l(t.x,n.x)}function l(t,n){var e=f(t,1),i=f(n,1);return e!==i?e-i:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(i){var f,l,p,_,b,d,v,g,y,x,j,O=i,w=Object(r.a)(),m={point:M,lineStart:function(){m.point=T,l&&l.push(p=[]);x=!0,y=!1,v=g=NaN},lineEnd:function(){f&&(T(_,b),d&&y&&w.rejoin(),f.push(w.result()));m.point=M,y&&O.lineEnd()},polygonStart:function(){O=w,f=[],l=[],j=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=l.length;e<i;++e)for(var r,u,o=l[e],a=1,s=o.length,f=o[0],h=f[0],p=f[1];a<s;++a)r=h,u=p,f=o[a],h=f[0],p=f[1],u<=c?p>c&&(h-r)*(c-u)>(p-u)*(t-r)&&++n:p<=c&&(h-r)*(c-u)<(p-u)*(t-r)&&--n;return n}(),e=j&&n,r=(f=Object(o.a)(f)).length;(e||r)&&(i.polygonStart(),e&&(i.lineStart(),s(null,null,1,i),i.lineEnd()),r&&Object(u.a)(f,h,n,s,i),i.polygonEnd());O=i,f=l=p=null}};function M(t,n){a(t,n)&&O.point(t,n)}function T(i,r){var u=a(i,r);if(l&&p.push([i,r]),x)_=i,b=r,d=u,x=!1,u&&(O.lineStart(),O.point(i,r));else if(u&&y)O.point(i,r);else{var o=[v=Math.max(-1e9,Math.min(1e9,v)),g=Math.max(-1e9,Math.min(1e9,g))],s=[i=Math.max(-1e9,Math.min(1e9,i)),r=Math.max(-1e9,Math.min(1e9,r))];!function(t,n,e,i,r,u){var o,c=t[0],a=t[1],s=0,f=1,h=n[0]-c,l=n[1]-a;if(o=e-c,h||!(o>0)){if(o/=h,h<0){if(o<s)return;o<f&&(f=o)}else if(h>0){if(o>f)return;o>s&&(s=o)}if(o=r-c,h||!(o<0)){if(o/=h,h<0){if(o>f)return;o>s&&(s=o)}else if(h>0){if(o<s)return;o<f&&(f=o)}if(o=i-a,l||!(o>0)){if(o/=l,l<0){if(o<s)return;o<f&&(f=o)}else if(l>0){if(o>f)return;o>s&&(s=o)}if(o=u-a,l||!(o<0)){if(o/=l,l<0){if(o>f)return;o>s&&(s=o)}else if(l>0){if(o<s)return;o<f&&(f=o)}return s>0&&(t[0]=c+s*h,t[1]=a+s*l),f<1&&(n[0]=c+f*h,n[1]=a+f*l),!0}}}}}(o,s,t,n,e,c)?u&&(O.lineStart(),O.point(i,r),j=!1):(y||(O.lineStart(),O.point(o[0],o[1])),O.point(s[0],s[1]),u||O.lineEnd(),j=!1)}v=i,g=r,y=u}return m}}},795:function(t,n,e){"use strict";e.d(n,"a",(function(){return u}));var i=e(708),r=e(851);function u(t,n){var e=Object(i.t)(t),r=(e+Object(i.t)(n))/2;if(Object(i.a)(r)<i.i)return function(t){var n=Object(i.g)(t);function e(t,e){return[t*n,Object(i.t)(e)/n]}return e.invert=function(t,e){return[t/n,Object(i.c)(e*n)]},e}(t);var u=1+e*(2*r-e),o=Object(i.u)(u)/r;function c(t,n){var e=Object(i.u)(u-2*r*Object(i.t)(n))/r;return[e*Object(i.t)(t*=r),o-e*Object(i.g)(t)]}return c.invert=function(t,n){var e=o-n,c=Object(i.e)(t,Object(i.a)(e))*Object(i.s)(e);return e*r<0&&(c-=i.o*Object(i.s)(t)*Object(i.s)(e)),[c/r,Object(i.c)((u-(t*t+e*e)*r*r)/(2*r))]},c}n.b=function(){return Object(r.a)(u).scale(155.424).center([0,33.6442])}},796:function(t,n,e){"use strict";function i(t,n,e,i,r){var u=t*t,o=u*t;return((1-3*t+3*u-o)*n+(4-6*u+3*o)*e+(1+3*t+3*u-3*o)*i+o*r)/6}e.d(n,"a",(function(){return i})),n.b=function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),u=t[r],o=t[r+1],c=r>0?t[r-1]:2*u-o,a=r<n-1?t[r+2]:2*o-u;return i((e-r/n)*n,c,u,o,a)}}},797:function(t,n,e){"use strict";var i=e(757),r=e(775),u=e(842),o=e(841),c=e(774),a=e(843),s=e(840),f=e(931),h=e(798);n.a=function(t,n){var e,l=typeof n;return null==n||"boolean"===l?Object(f.a)(n):("number"===l?c.a:"string"===l?(e=Object(i.e)(n))?(n=e,r.a):s.a:n instanceof i.e?r.a:n instanceof Date?o.a:Object(h.b)(n)?h.a:Array.isArray(n)?u.b:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?a.a:c.a)(t,n)}},798:function(t,n,e){"use strict";function i(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}e.d(n,"b",(function(){return i})),n.a=function(t,n){n||(n=[]);var e,i=t?Math.min(n.length,t.length):0,r=n.slice();return function(u){for(e=0;e<i;++e)r[e]=t[e]*(1-u)+n[e]*u;return r}}},799:function(t,n,e){"use strict";var i={},r={};function u(t){return new Function("d","return {"+t.map((function(t,n){return JSON.stringify(t)+": d["+n+'] || ""'})).join(",")+"}")}function o(t){var n=Object.create(null),e=[];return t.forEach((function(t){for(var i in t)i in n||e.push(n[i]=i)})),e}function c(t,n){var e=t+"",i=e.length;return i<n?new Array(n-i+1).join(0)+e:e}function a(t){var n,e=t.getUTCHours(),i=t.getUTCMinutes(),r=t.getUTCSeconds(),u=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":((n=t.getUTCFullYear())<0?"-"+c(-n,6):n>9999?"+"+c(n,6):c(n,4))+"-"+c(t.getUTCMonth()+1,2)+"-"+c(t.getUTCDate(),2)+(u?"T"+c(e,2)+":"+c(i,2)+":"+c(r,2)+"."+c(u,3)+"Z":r?"T"+c(e,2)+":"+c(i,2)+":"+c(r,2)+"Z":i||e?"T"+c(e,2)+":"+c(i,2)+"Z":"")}n.a=function(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function c(t,n){var u,o=[],c=t.length,a=0,s=0,f=c<=0,h=!1;function l(){if(f)return r;if(h)return h=!1,i;var n,u,o=a;if(34===t.charCodeAt(o)){for(;a++<c&&34!==t.charCodeAt(a)||34===t.charCodeAt(++a););return(n=a)>=c?f=!0:10===(u=t.charCodeAt(a++))?h=!0:13===u&&(h=!0,10===t.charCodeAt(a)&&++a),t.slice(o+1,n-1).replace(/""/g,'"')}for(;a<c;){if(10===(u=t.charCodeAt(n=a++)))h=!0;else if(13===u)h=!0,10===t.charCodeAt(a)&&++a;else if(u!==e)continue;return t.slice(o,n)}return f=!0,t.slice(o,c)}for(10===t.charCodeAt(c-1)&&--c,13===t.charCodeAt(c-1)&&--c;(u=l())!==r;){for(var p=[];u!==i&&u!==r;)p.push(u),u=l();n&&null==(p=n(p,s++))||o.push(p)}return o}function s(n,e){return n.map((function(n){return e.map((function(t){return h(n[t])})).join(t)}))}function f(n){return n.map(h).join(t)}function h(t){return null==t?"":t instanceof Date?a(t):n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,i,r=c(t,(function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=u(t);return function(i,r){return n(e(i),r,t)}}(t,n):u(t)}));return r.columns=i||[],r},parseRows:c,format:function(n,e){return null==e&&(e=o(n)),[e.map(h).join(t)].concat(s(n,e)).join("\n")},formatBody:function(t,n){return null==n&&(n=o(t)),s(t,n).join("\n")},formatRows:function(t){return t.map(f).join("\n")},formatRow:f,formatValue:h}}},800:function(t,n,e){"use strict";e.d(n,"b",(function(){return r})),e.d(n,"c",(function(){return u})),e.d(n,"a",(function(){return c}));var i,r,u,o=e(922);function c(t){return i=Object(o.a)(t),r=i.format,u=i.formatPrefix,i}c({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"})},801:function(t,n,e){"use strict";e.d(n,"b",(function(){return r})),e.d(n,"a",(function(){return u}));var i=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function r(t){if(!(n=i.exec(t)))throw new Error("invalid format: "+t);var n;return new u({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}function u(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}r.prototype=u.prototype,u.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type}},802:function(t,n,e){"use strict";var i=e(844);n.a=function(t){return(t=Object(i.a)(Math.abs(t)))?t[1]:NaN}},803:function(t,n,e){"use strict";e.d(n,"b",(function(){return r}));var i=e(719);function r(t,n){return[t,n]}r.invert=r,n.a=function(){return Object(i.a)(r).scale(152.63)}},804:function(t,n,e){"use strict";e.d(n,"b",(function(){return u})),e.d(n,"c",(function(){return o}));var i=e(760),r=e(782),u=(1+Math.sqrt(5))/2;function o(t,n,e,u,o,c){for(var a,s,f,h,l,p,_,b,d,v,g,y=[],x=n.children,j=0,O=0,w=x.length,m=n.value;j<w;){f=o-e,h=c-u;do{l=x[O++].value}while(!l&&O<w);for(p=_=l,g=l*l*(v=Math.max(h/f,f/h)/(m*t)),d=Math.max(_/g,g/p);O<w;++O){if(l+=s=x[O].value,s<p&&(p=s),s>_&&(_=s),g=l*l*v,(b=Math.max(_/g,g/p))>d){l-=s;break}d=b}y.push(a={value:l,dice:f<h,children:x.slice(j,O)}),a.dice?Object(i.a)(a,e,u,o,m?u+=h*l/m:c):Object(r.a)(a,e,u,m?e+=f*l/m:o,c),m-=l,j=O}return y}n.a=function t(n){function e(t,e,i,r,u){o(n,t,e,i,r,u)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(u)},805:function(t,n,e){"use strict";var i=e(932),r=e(748),u=e(786),o=e(878);n.a=function(){var t=o.a,n=o.b,e=Object(r.a)(!0),c=null,a=u.a,s=null;function f(r){var u,o,f,h=r.length,l=!1;for(null==c&&(s=a(f=Object(i.a)())),u=0;u<=h;++u)!(u<h&&e(o=r[u],u,r))===l&&((l=!l)?s.lineStart():s.lineEnd()),l&&s.point(+t(o,u,r),+n(o,u,r));if(f)return s=null,f+""||null}return f.x=function(n){return arguments.length?(t="function"==typeof n?n:Object(r.a)(+n),f):t},f.y=function(t){return arguments.length?(n="function"==typeof t?t:Object(r.a)(+t),f):n},f.defined=function(t){return arguments.length?(e="function"==typeof t?t:Object(r.a)(!!t),f):e},f.curve=function(t){return arguments.length?(a=t,null!=c&&(s=a(c)),f):a},f.context=function(t){return arguments.length?(null==t?c=s=null:s=a(c=t),f):c},f}},806:function(t,n,e){"use strict";n.a=function(){}},807:function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var i=e(785),r=e(788);function u(t,n,e){var r=t._x1,u=t._y1,o=t._x2,c=t._y2;if(t._l01_a>i.f){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,s=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/s,u=(u*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/s}if(t._l23_a>i.f){var f=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,h=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*f+t._x1*t._l23_2a-n*t._l12_2a)/h,c=(c*f+t._y1*t._l23_2a-e*t._l12_2a)/h}t._context.bezierCurveTo(r,u,o,c,t._x2,t._y2)}function o(t,n){this._context=t,this._alpha=n}o.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,i=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+i*i,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:u(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.a=function t(n){function e(t){return n?new o(t,n):new r.a(t,0)}return e.alpha=function(n){return t(+n)},e}(.5)},808:function(t,n,e){"use strict";function i(t,n){this._context=t,this._t=n}function r(t){return new i(t,0)}function u(t){return new i(t,1)}e.d(n,"c",(function(){return r})),e.d(n,"b",(function(){return u})),i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}},n.a=function(t){return new i(t,.5)}},834:function(t,n,e){"use strict";function i(t){var n=0,e=t.children,i=e&&e.length;if(i)for(;--i>=0;)n+=e[i].value;else n=1;t.value=n}e.d(n,"c",(function(){return r})),e.d(n,"b",(function(){return c})),e.d(n,"a",(function(){return a}));function r(t,n){var e,i,r,o,s,f=new a(t),h=+t.value&&(f.value=t.value),l=[f];for(null==n&&(n=u);e=l.pop();)if(h&&(e.value=+e.data.value),(r=n(e.data))&&(s=r.length))for(e.children=new Array(s),o=s-1;o>=0;--o)l.push(i=e.children[o]=new a(r[o])),i.parent=e,i.depth=e.depth+1;return f.eachBefore(c)}function u(t){return t.children}function o(t){t.data=t.data.data}function c(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function a(t){this.data=t,this.depth=this.height=0,this.parent=null}a.prototype=r.prototype={constructor:a,count:function(){return this.eachAfter(i)},each:function(t){var n,e,i,r,u=this,o=[u];do{for(n=o.reverse(),o=[];u=n.pop();)if(t(u),e=u.children)for(i=0,r=e.length;i<r;++i)o.push(e[i])}while(o.length);return this},eachAfter:function(t){for(var n,e,i,r=this,u=[r],o=[];r=u.pop();)if(o.push(r),n=r.children)for(e=0,i=n.length;e<i;++e)u.push(n[e]);for(;r=o.pop();)t(r);return this},eachBefore:function(t){for(var n,e,i=this,r=[i];i=r.pop();)if(t(i),n=i.children)for(e=n.length-1;e>=0;--e)r.push(n[e]);return this},sum:function(t){return this.eachAfter((function(n){for(var e=+t(n.data)||0,i=n.children,r=i&&i.length;--r>=0;)e+=i[r].value;n.value=e}))},sort:function(t){return this.eachBefore((function(n){n.children&&n.children.sort(t)}))},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),i=n.ancestors(),r=null;t=e.pop(),n=i.pop();for(;t===n;)r=t,t=e.pop(),n=i.pop();return r}(n,t),i=[n];n!==e;)n=n.parent,i.push(n);for(var r=i.length;t!==e;)i.splice(r,0,t),t=t.parent;return i},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){var t=[];return this.each((function(n){t.push(n)})),t},leaves:function(){var t=[];return this.eachBefore((function(n){n.children||t.push(n)})),t},links:function(){var t=this,n=[];return t.each((function(e){e!==t&&n.push({source:e.parent,target:e})})),n},copy:function(){return r(this).eachBefore(o)}}},838:function(t,n,e){"use strict";function i(t,n){var e=Object.create(t.prototype);for(var i in n)e[i]=n[i];return e}e.d(n,"b",(function(){return i})),n.a=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t}},839:function(t,n,e){"use strict";var i=e(796);n.a=function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),u=t[(r+n-1)%n],o=t[r%n],c=t[(r+1)%n],a=t[(r+2)%n];return Object(i.a)((e-r/n)*n,u,o,c,a)}}},840:function(t,n,e){"use strict";var i=e(774),r=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,u=new RegExp(r.source,"g");n.a=function(t,n){var e,o,c,a=r.lastIndex=u.lastIndex=0,s=-1,f=[],h=[];for(t+="",n+="";(e=r.exec(t))&&(o=u.exec(n));)(c=o.index)>a&&(c=n.slice(a,c),f[s]?f[s]+=c:f[++s]=c),(e=e[0])===(o=o[0])?f[s]?f[s]+=o:f[++s]=o:(f[++s]=null,h.push({i:s,x:Object(i.a)(e,o)})),a=u.lastIndex;return a<n.length&&(c=n.slice(a),f[s]?f[s]+=c:f[++s]=c),f.length<2?h[0]?function(t){return function(n){return t(n)+""}}(h[0].x):function(t){return function(){return t}}(n):(n=h.length,function(t){for(var e,i=0;i<n;++i)f[(e=h[i]).i]=e.x(t);return f.join("")})}},841:function(t,n,e){"use strict";n.a=function(t,n){var e=new Date;return t=+t,n=+n,function(i){return e.setTime(t*(1-i)+n*i),e}}},842:function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var i=e(797),r=e(798);function u(t,n){var e,r=n?n.length:0,u=t?Math.min(r,t.length):0,o=new Array(u),c=new Array(r);for(e=0;e<u;++e)o[e]=Object(i.a)(t[e],n[e]);for(;e<r;++e)c[e]=n[e];return function(t){for(e=0;e<u;++e)c[e]=o[e](t);return c}}n.a=function(t,n){return(Object(r.b)(n)?r.a:u)(t,n)}},843:function(t,n,e){"use strict";var i=e(797);n.a=function(t,n){var e,r={},u={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=Object(i.a)(t[e],n[e]):u[e]=n[e];return function(t){for(e in r)u[e]=r[e](t);return u}}},844:function(t,n,e){"use strict";n.a=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,i=t.slice(0,e);return[i.length>1?i[0]+i.slice(2):i,+t.slice(e+1)]}},845:function(t,n,e){"use strict";e.d(n,"a",(function(){return l})),e.d(n,"b",(function(){return _}));var i,r,u,o,c,a=e(759),s=e(708),f=e(739),h=e(740),l=Object(a.a)(),p=Object(a.a)(),_={point:f.a,lineStart:f.a,lineEnd:f.a,polygonStart:function(){l.reset(),_.lineStart=b,_.lineEnd=d},polygonEnd:function(){var t=+l;p.add(t<0?s.w+t:t),this.lineStart=this.lineEnd=this.point=f.a},sphere:function(){p.add(s.w)}};function b(){_.point=v}function d(){g(i,r)}function v(t,n){_.point=g,i=t,r=n,t*=s.r,n*=s.r,u=t,o=Object(s.g)(n=n/2+s.q),c=Object(s.t)(n)}function g(t,n){t*=s.r,n=(n*=s.r)/2+s.q;var e=t-u,i=e>=0?1:-1,r=i*e,a=Object(s.g)(n),f=Object(s.t)(n),h=c*f,p=o*a+h*Object(s.g)(r),_=h*i*Object(s.t)(r);l.add(Object(s.e)(_,p)),u=t,o=a,c=f}n.c=function(t){return p.reset(),Object(h.a)(t,_),2*p}},846:function(t,n,e){"use strict";var i=e(941),r=e(708);n.a=Object(i.a)((function(){return!0}),(function(t){var n,e=NaN,i=NaN,u=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(o,c){var a=o>0?r.o:-r.o,s=Object(r.a)(o-e);Object(r.a)(s-r.o)<r.i?(t.point(e,i=(i+c)/2>0?r.l:-r.l),t.point(u,i),t.lineEnd(),t.lineStart(),t.point(a,i),t.point(o,i),n=0):u!==a&&s>=r.o&&(Object(r.a)(e-u)<r.i&&(e-=u*r.i),Object(r.a)(o-a)<r.i&&(o-=a*r.i),i=function(t,n,e,i){var u,o,c=Object(r.t)(t-e);return Object(r.a)(c)>r.i?Object(r.d)((Object(r.t)(n)*(o=Object(r.g)(i))*Object(r.t)(e)-Object(r.t)(i)*(u=Object(r.g)(n))*Object(r.t)(t))/(u*o*c)):(n+i)/2}(e,i,o,c),t.point(u,i),t.lineEnd(),t.lineStart(),t.point(a,i),n=0),t.point(e=o,i=c),u=a},lineEnd:function(){t.lineEnd(),e=i=NaN},clean:function(){return 2-n}}}),(function(t,n,e,i){var u;if(null==t)u=e*r.l,i.point(-r.o,u),i.point(0,u),i.point(r.o,u),i.point(r.o,0),i.point(r.o,-u),i.point(0,-u),i.point(-r.o,-u),i.point(-r.o,0),i.point(-r.o,u);else if(Object(r.a)(t[0]-n[0])>r.i){var o=t[0]<n[0]?r.o:-r.o;u=e*o/2,i.point(-o,u),i.point(0,u),i.point(o,u)}else i.point(n[0],n[1])}),[-r.o,-r.l])},847:function(t,n,e){"use strict";var i=e(777),r=e(924),u=e(708),o=e(945),c=e(941);n.a=function(t){var n=Object(u.g)(t),e=6*u.r,a=n>0,s=Object(u.a)(n)>u.i;function f(t,e){return Object(u.g)(t)*Object(u.g)(e)>n}function h(t,e,r){var o=Object(i.a)(t),c=Object(i.a)(e),a=[1,0,0],s=Object(i.c)(o,c),f=Object(i.d)(s,s),h=s[0],l=f-h*h;if(!l)return!r&&t;var p=n*f/l,_=-n*h/l,b=Object(i.c)(a,s),d=Object(i.f)(a,p),v=Object(i.f)(s,_);Object(i.b)(d,v);var g=b,y=Object(i.d)(d,g),x=Object(i.d)(g,g),j=y*y-x*(Object(i.d)(d,d)-1);if(!(j<0)){var O=Object(u.u)(j),w=Object(i.f)(g,(-y-O)/x);if(Object(i.b)(w,d),w=Object(i.g)(w),!r)return w;var m,M=t[0],T=e[0],N=t[1],S=e[1];T<M&&(m=M,M=T,T=m);var E=T-M,k=Object(u.a)(E-u.o)<u.i;if(!k&&S<N&&(m=N,N=S,S=m),k||E<u.i?k?N+S>0^w[1]<(Object(u.a)(w[0]-M)<u.i?N:S):N<=w[1]&&w[1]<=S:E>u.o^(M<=w[0]&&w[0]<=T)){var C=Object(i.f)(g,(-y+O)/x);return Object(i.b)(C,d),[w,Object(i.g)(C)]}}}function l(n,e){var i=a?t:u.o-t,r=0;return n<-i?r|=1:n>i&&(r|=2),e<-i?r|=4:e>i&&(r|=8),r}return Object(c.a)(f,(function(t){var n,e,i,r,c;return{lineStart:function(){r=i=!1,c=1},point:function(p,_){var b,d=[p,_],v=f(p,_),g=a?v?0:l(p,_):v?l(p+(p<0?u.o:-u.o),_):0;if(!n&&(r=i=v)&&t.lineStart(),v!==i&&(!(b=h(n,d))||Object(o.a)(n,b)||Object(o.a)(d,b))&&(d[2]=1),v!==i)c=0,v?(t.lineStart(),b=h(d,n),t.point(b[0],b[1])):(b=h(n,d),t.point(b[0],b[1],2),t.lineEnd()),n=b;else if(s&&n&&a^v){var y;g&e||!(y=h(d,n,!0))||(c=0,a?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1],3)))}!v||n&&Object(o.a)(n,d)||t.point(d[0],d[1]),n=d,i=v,e=g},lineEnd:function(){i&&t.lineEnd(),n=null},clean:function(){return c|(r&&i)<<1}}}),(function(n,i,u,o){Object(r.a)(o,t,e,u,n,i)}),a?[0,-t]:[-u.o,t-u.o])}},848:function(t,n,e){"use strict";e.d(n,"a",(function(){return c})),e.d(n,"b",(function(){return a}));var i=e(921),r=e(708);function u(t,n,e){var u=Object(i.b)(t,n-r.i,e).concat(n);return function(t){return u.map((function(n){return[t,n]}))}}function o(t,n,e){var u=Object(i.b)(t,n-r.i,e).concat(n);return function(t){return u.map((function(n){return[n,t]}))}}function c(){var t,n,e,c,a,s,f,h,l,p,_,b,d=10,v=d,g=90,y=360,x=2.5;function j(){return{type:"MultiLineString",coordinates:O()}}function O(){return Object(i.b)(Object(r.f)(c/g)*g,e,g).map(_).concat(Object(i.b)(Object(r.f)(h/y)*y,f,y).map(b)).concat(Object(i.b)(Object(r.f)(n/d)*d,t,d).filter((function(t){return Object(r.a)(t%g)>r.i})).map(l)).concat(Object(i.b)(Object(r.f)(s/v)*v,a,v).filter((function(t){return Object(r.a)(t%y)>r.i})).map(p))}return j.lines=function(){return O().map((function(t){return{type:"LineString",coordinates:t}}))},j.outline=function(){return{type:"Polygon",coordinates:[_(c).concat(b(f).slice(1),_(e).reverse().slice(1),b(h).reverse().slice(1))]}},j.extent=function(t){return arguments.length?j.extentMajor(t).extentMinor(t):j.extentMinor()},j.extentMajor=function(t){return arguments.length?(c=+t[0][0],e=+t[1][0],h=+t[0][1],f=+t[1][1],c>e&&(t=c,c=e,e=t),h>f&&(t=h,h=f,f=t),j.precision(x)):[[c,h],[e,f]]},j.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],s=+e[0][1],a=+e[1][1],n>t&&(e=n,n=t,t=e),s>a&&(e=s,s=a,a=e),j.precision(x)):[[n,s],[t,a]]},j.step=function(t){return arguments.length?j.stepMajor(t).stepMinor(t):j.stepMinor()},j.stepMajor=function(t){return arguments.length?(g=+t[0],y=+t[1],j):[g,y]},j.stepMinor=function(t){return arguments.length?(d=+t[0],v=+t[1],j):[d,v]},j.precision=function(i){return arguments.length?(x=+i,l=u(s,a,90),p=o(n,t,x),_=u(h,f,90),b=o(c,e,x),j):x},j.extentMajor([[-180,-90+r.i],[180,90-r.i]]).extentMinor([[-180,-80-r.i],[180,80+r.i]])}function a(){return c()()}},849:function(t,n,e){"use strict";n.a=function(t){return t}},850:function(t,n,e){"use strict";var i=e(795);n.a=function(){return Object(i.b)().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}},851:function(t,n,e){"use strict";e.d(n,"a",(function(){return u}));var i=e(708),r=e(719);function u(t){var n=0,e=i.o/3,u=Object(r.b)(t),o=u(n,e);return o.parallels=function(t){return arguments.length?u(n=t[0]*i.r,e=t[1]*i.r):[n*i.h,e*i.h]},o}},852:function(t,n,e){"use strict";e.d(n,"a",(function(){return o})),e.d(n,"c",(function(){return c})),e.d(n,"d",(function(){return a})),e.d(n,"b",(function(){return s}));var i=e(740),r=e(946);function u(t,n,e){var u=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=u&&t.clipExtent(null),Object(i.a)(e,t.stream(r.a)),n(r.a.result()),null!=u&&t.clipExtent(u),t}function o(t,n,e){return u(t,(function(e){var i=n[1][0]-n[0][0],r=n[1][1]-n[0][1],u=Math.min(i/(e[1][0]-e[0][0]),r/(e[1][1]-e[0][1])),o=+n[0][0]+(i-u*(e[1][0]+e[0][0]))/2,c=+n[0][1]+(r-u*(e[1][1]+e[0][1]))/2;t.scale(150*u).translate([o,c])}),e)}function c(t,n,e){return o(t,[[0,0],n],e)}function a(t,n,e){return u(t,(function(e){var i=+n,r=i/(e[1][0]-e[0][0]),u=(i-r*(e[1][0]+e[0][0]))/2,o=-r*e[0][1];t.scale(150*r).translate([u,o])}),e)}function s(t,n,e){return u(t,(function(e){var i=+n,r=i/(e[1][1]-e[0][1]),u=-r*e[0][0],o=(i-r*(e[1][1]+e[0][1]))/2;t.scale(150*r).translate([u,o])}),e)}},853:function(t,n,e){"use strict";e.d(n,"a",(function(){return o}));var i=e(708),r=e(780),u=e(719),o=Object(r.b)((function(t){return Object(i.u)(2/(1+t))}));o.invert=Object(r.a)((function(t){return 2*Object(i.c)(t/2)})),n.b=function(){return Object(u.a)(o).scale(124.75).clipAngle(179.999)}},854:function(t,n,e){"use strict";e.d(n,"a",(function(){return o}));var i=e(708),r=e(780),u=e(719),o=Object(r.b)((function(t){return(t=Object(i.b)(t))&&t/Object(i.t)(t)}));o.invert=Object(r.a)((function(t){return t})),n.b=function(){return Object(u.a)(o).scale(79.4188).clipAngle(179.999)}},855:function(t,n,e){"use strict";e.d(n,"a",(function(){return c}));var i=e(708),r=e(851),u=e(781);function o(t){return Object(i.v)((i.l+t)/2)}function c(t,n){var e=Object(i.g)(t),r=t===n?Object(i.t)(t):Object(i.n)(e/Object(i.g)(n))/Object(i.n)(o(n)/o(t)),c=e*Object(i.p)(o(t),r)/r;if(!r)return u.c;function a(t,n){c>0?n<-i.l+i.i&&(n=-i.l+i.i):n>i.l-i.i&&(n=i.l-i.i);var e=c/Object(i.p)(o(n),r);return[e*Object(i.t)(r*t),c-e*Object(i.g)(r*t)]}return a.invert=function(t,n){var e=c-n,u=Object(i.s)(r)*Object(i.u)(t*t+e*e),o=Object(i.e)(t,Object(i.a)(e))*Object(i.s)(e);return e*r<0&&(o-=i.o*Object(i.s)(t)*Object(i.s)(e)),[o/r,2*Object(i.d)(Object(i.p)(c/u,1/r))-i.l]},a}n.b=function(){return Object(r.a)(c).scale(109.5).parallels([30,30])}},856:function(t,n,e){"use strict";e.d(n,"a",(function(){return o}));var i=e(708),r=e(851),u=e(803);function o(t,n){var e=Object(i.g)(t),r=t===n?Object(i.t)(t):(e-Object(i.g)(n))/(n-t),o=e/r+t;if(Object(i.a)(r)<i.i)return u.b;function c(t,n){var e=o-n,u=r*t;return[e*Object(i.t)(u),o-e*Object(i.g)(u)]}return c.invert=function(t,n){var e=o-n,u=Object(i.e)(t,Object(i.a)(e))*Object(i.s)(e);return e*r<0&&(u-=i.o*Object(i.s)(t)*Object(i.s)(e)),[u/r,o-Object(i.s)(r)*Object(i.u)(t*t+e*e)]},c}n.b=function(){return Object(r.a)(o).scale(131.154).center([0,13.9389])}},857:function(t,n,e){"use strict";e.d(n,"b",(function(){return f}));var i=e(719),r=e(708),u=1.340264,o=-.081106,c=893e-6,a=.003796,s=Object(r.u)(3)/2;function f(t,n){var e=Object(r.c)(s*Object(r.t)(n)),i=e*e,f=i*i*i;return[t*Object(r.g)(e)/(s*(u+3*o*i+f*(7*c+9*a*i))),e*(u+o*i+f*(c+a*i))]}f.invert=function(t,n){for(var e,i=n,f=i*i,h=f*f*f,l=0;l<12&&(h=(f=(i-=e=(i*(u+o*f+h*(c+a*f))-n)/(u+3*o*f+h*(7*c+9*a*f)))*i)*f*f,!(Object(r.a)(e)<r.j));++l);return[s*t*(u+3*o*f+h*(7*c+9*a*f))/Object(r.g)(i),Object(r.c)(Object(r.t)(i)/s)]},n.a=function(){return Object(i.a)(f).scale(177.158)}},858:function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var i=e(708),r=e(780),u=e(719);function o(t,n){var e=Object(i.g)(n),r=Object(i.g)(t)*e;return[e*Object(i.t)(t)/r,Object(i.t)(n)/r]}o.invert=Object(r.a)(i.d),n.a=function(){return Object(u.a)(o).scale(144.049).clipAngle(60)}},859:function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var i=e(719),r=e(708);function u(t,n){var e=n*n,i=e*e;return[t*(.8707-.131979*e+i*(i*(.003971*e-.001529*i)-.013791)),n*(1.007226+e*(.015085+i*(.028874*e-.044475-.005916*i)))]}u.invert=function(t,n){var e,i=n,u=25;do{var o=i*i,c=o*o;i-=e=(i*(1.007226+o*(.015085+c*(.028874*o-.044475-.005916*c)))-n)/(1.007226+o*(.045255+c*(.259866*o-.311325-.005916*11*c)))}while(Object(r.a)(e)>r.i&&--u>0);return[t/(.8707+(o=i*i)*(o*(o*o*o*(.003971-.001529*o)-.013791)-.131979)),i]},n.a=function(){return Object(i.a)(u).scale(175.295)}},860:function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var i=e(708),r=e(780),u=e(719);function o(t,n){return[Object(i.g)(n)*Object(i.t)(t),Object(i.t)(n)]}o.invert=Object(r.a)(i.c),n.a=function(){return Object(u.a)(o).scale(249.5).clipAngle(90+i.i)}},861:function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var i=e(708),r=e(780),u=e(719);function o(t,n){var e=Object(i.g)(n),r=1+Object(i.g)(t)*e;return[e*Object(i.t)(t)/r,Object(i.t)(n)/r]}o.invert=Object(r.a)((function(t){return 2*Object(i.d)(t)})),n.a=function(){return Object(u.a)(o).scale(250).clipAngle(142)}},862:function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var i=e(708),r=e(781);function u(t,n){return[Object(i.n)(Object(i.v)((i.l+n)/2)),-t]}u.invert=function(t,n){return[-n,2*Object(i.d)(Object(i.k)(t))-i.l]},n.a=function(){var t=Object(r.b)(u),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)}},863:function(t,n,e){"use strict";function i(t){return null==t?null:r(t)}function r(t){if("function"!=typeof t)throw new Error;return t}e.d(n,"a",(function(){return i})),e.d(n,"b",(function(){return r}))},864:function(t,n,e){"use strict";e.d(n,"b",(function(){return a}));var i=e(925);function r(t,n,e){var i,r,u,o,c=t.x-n.x,a=t.y-n.y,s=c*c+a*a;s?(r=n.r+e.r,r*=r,o=t.r+e.r,r>(o*=o)?(i=(s+o-r)/(2*s),u=Math.sqrt(Math.max(0,o/s-i*i)),e.x=t.x-i*c-u*a,e.y=t.y-i*a+u*c):(i=(s+r-o)/(2*s),u=Math.sqrt(Math.max(0,r/s-i*i)),e.x=n.x+i*c-u*a,e.y=n.y+i*a+u*c)):(e.x=n.x+e.r,e.y=n.y)}function u(t,n){var e=t.r+n.r-1e-6,i=n.x-t.x,r=n.y-t.y;return e>0&&e*e>i*i+r*r}function o(t){var n=t._,e=t.next._,i=n.r+e.r,r=(n.x*e.r+e.x*n.r)/i,u=(n.y*e.r+e.y*n.r)/i;return r*r+u*u}function c(t){this._=t,this.next=null,this.previous=null}function a(t){if(!(s=t.length))return 0;var n,e,a,s,f,h,l,p,_,b,d;if((n=t[0]).x=0,n.y=0,!(s>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(s>2))return n.r+e.r;r(e,n,a=t[2]),n=new c(n),e=new c(e),a=new c(a),n.next=a.previous=e,e.next=n.previous=a,a.next=e.previous=n;t:for(l=3;l<s;++l){r(n._,e._,a=t[l]),a=new c(a),p=e.next,_=n.previous,b=e._.r,d=n._.r;do{if(b<=d){if(u(p._,a._)){e=p,n.next=e,e.previous=n,--l;continue t}b+=p._.r,p=p.next}else{if(u(_._,a._)){(n=_).next=e,e.previous=n,--l;continue t}d+=_._.r,_=_.previous}}while(p!==_.next);for(a.previous=n,a.next=e,n.next=e.previous=e=a,f=o(n);(a=a.next)!==e;)(h=o(a))<f&&(n=a,f=h);e=n.next}for(n=[e._],a=e;(a=a.next)!==e;)n.push(a._);for(a=Object(i.a)(n),l=0;l<s;++l)(n=t[l]).x-=a.x,n.y-=a.y;return a.r}n.a=function(t){return a(t),t}},865:function(t,n,e){"use strict";e.d(n,"a",(function(){return o}));var i=e(934),r=e(758);function u(t){return function n(e){function u(n,u){var o=t((n=Object(i.a)(n)).h,(u=Object(i.a)(u)).h),c=Object(r.a)(n.s,u.s),a=Object(r.a)(n.l,u.l),s=Object(r.a)(n.opacity,u.opacity);return function(t){return n.h=o(t),n.s=c(t),n.l=a(Math.pow(t,e)),n.opacity=s(t),n+""}}return e=+e,u.gamma=n,u}(1)}n.b=u(r.c);var o=u(r.a)},866:function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var i=e(714),r=Object(i.a)((function(t){t.setMonth(0,1),t.setHours(0,0,0,0)}),(function(t,n){t.setFullYear(t.getFullYear()+n)}),(function(t,n){return n.getFullYear()-t.getFullYear()}),(function(t){return t.getFullYear()}));r.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Object(i.a)((function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)}),(function(n,e){n.setFullYear(n.getFullYear()+e*t)})):null},n.a=r;var u=r.range},867:function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var i=e(714),r=Object(i.a)((function(t){t.setDate(1),t.setHours(0,0,0,0)}),(function(t,n){t.setMonth(t.getMonth()+n)}),(function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())}),(function(t){return t.getMonth()}));n.a=r;var u=r.range},868:function(t,n,e){"use strict";e.d(n,"a",(function(){return o}));var i=e(714),r=e(731),u=Object(i.a)((function(t){t.setHours(0,0,0,0)}),(function(t,n){t.setDate(t.getDate()+n)}),(function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*r.c)/r.a}),(function(t){return t.getDate()-1}));n.b=u;var o=u.range},869:function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var i=e(714),r=e(731),u=Object(i.a)((function(t){t.setTime(t-t.getMilliseconds()-t.getSeconds()*r.d-t.getMinutes()*r.c)}),(function(t,n){t.setTime(+t+n*r.b)}),(function(t,n){return(n-t)/r.b}),(function(t){return t.getHours()}));n.a=u;var o=u.range},870:function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var i=e(714),r=e(731),u=Object(i.a)((function(t){t.setTime(t-t.getMilliseconds()-t.getSeconds()*r.d)}),(function(t,n){t.setTime(+t+n*r.c)}),(function(t,n){return(n-t)/r.c}),(function(t){return t.getMinutes()}));n.a=u;var o=u.range},871:function(t,n,e){"use strict";e.d(n,"a",(function(){return l}));var i=e(713),r=e(872),u=e(712),o=e(868),c=e(866),a=e(873);function s(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function f(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function h(t,n,e){return{y:t,m:n,d:e,H:0,M:0,S:0,L:0}}function l(t){var n=t.dateTime,e=t.date,c=t.time,a=t.periods,l=t.days,_=t.shortDays,b=t.months,d=t.shortMonths,v=y(a),g=x(a),mt=y(l),Mt=x(l),Tt=y(_),Nt=x(_),St=y(b),Et=x(b),kt=y(d),Ct=x(d),At={a:function(t){return _[t.getDay()]},A:function(t){return l[t.getDay()]},b:function(t){return d[t.getMonth()]},B:function(t){return b[t.getMonth()]},c:null,d:L,e:L,f:Z,H:R,I:B,j:X,L:I,m:V,M:$,p:function(t){return a[+(t.getHours()>=12)]},q:function(t){return 1+~~(t.getMonth()/3)},Q:Ot,s:wt,S:W,u:J,U:Q,V:G,w:K,W:tt,x:null,X:null,y:nt,Y:et,Z:it,"%":jt},Ut={a:function(t){return _[t.getUTCDay()]},A:function(t){return l[t.getUTCDay()]},b:function(t){return d[t.getUTCMonth()]},B:function(t){return b[t.getUTCMonth()]},c:null,d:rt,e:rt,f:st,H:ut,I:ot,j:ct,L:at,m:ft,M:ht,p:function(t){return a[+(t.getUTCHours()>=12)]},q:function(t){return 1+~~(t.getUTCMonth()/3)},Q:Ot,s:wt,S:lt,u:pt,U:_t,V:bt,w:dt,W:vt,x:null,X:null,y:gt,Y:yt,Z:xt,"%":jt},Dt={a:function(t,n,e){var i=Tt.exec(n.slice(e));return i?(t.w=Nt[i[0].toLowerCase()],e+i[0].length):-1},A:function(t,n,e){var i=mt.exec(n.slice(e));return i?(t.w=Mt[i[0].toLowerCase()],e+i[0].length):-1},b:function(t,n,e){var i=kt.exec(n.slice(e));return i?(t.m=Ct[i[0].toLowerCase()],e+i[0].length):-1},B:function(t,n,e){var i=St.exec(n.slice(e));return i?(t.m=Et[i[0].toLowerCase()],e+i[0].length):-1},c:function(t,e,i){return Pt(t,n,e,i)},d:C,e:C,f:P,H:U,I:U,j:A,L:z,m:k,M:D,p:function(t,n,e){var i=v.exec(n.slice(e));return i?(t.p=g[i[0].toLowerCase()],e+i[0].length):-1},q:E,Q:Y,s:H,S:q,u:O,U:w,V:m,w:j,W:M,x:function(t,n,i){return Pt(t,e,n,i)},X:function(t,n,e){return Pt(t,c,n,e)},y:N,Y:T,Z:S,"%":F};function qt(t,n){return function(e){var i,r,u,o=[],c=-1,a=0,s=t.length;for(e instanceof Date||(e=new Date(+e));++c<s;)37===t.charCodeAt(c)&&(o.push(t.slice(a,c)),null!=(r=p[i=t.charAt(++c)])?i=t.charAt(++c):r="e"===i?" ":"0",(u=n[i])&&(i=u(e,r)),o.push(i),a=c+1);return o.push(t.slice(a,c)),o.join("")}}function zt(t,n){return function(e){var c,a,l=h(1900,void 0,1);if(Pt(l,t,e+="",0)!=e.length)return null;if("Q"in l)return new Date(l.Q);if("s"in l)return new Date(1e3*l.s+("L"in l?l.L:0));if(n&&!("Z"in l)&&(l.Z=0),"p"in l&&(l.H=l.H%12+12*l.p),void 0===l.m&&(l.m="q"in l?l.q:0),"V"in l){if(l.V<1||l.V>53)return null;"w"in l||(l.w=1),"Z"in l?(a=(c=f(h(l.y,0,1))).getUTCDay(),c=a>4||0===a?i.c.ceil(c):Object(i.c)(c),c=r.a.offset(c,7*(l.V-1)),l.y=c.getUTCFullYear(),l.m=c.getUTCMonth(),l.d=c.getUTCDate()+(l.w+6)%7):(a=(c=s(h(l.y,0,1))).getDay(),c=a>4||0===a?u.c.ceil(c):Object(u.c)(c),c=o.b.offset(c,7*(l.V-1)),l.y=c.getFullYear(),l.m=c.getMonth(),l.d=c.getDate()+(l.w+6)%7)}else("W"in l||"U"in l)&&("w"in l||(l.w="u"in l?l.u%7:"W"in l?1:0),a="Z"in l?f(h(l.y,0,1)).getUTCDay():s(h(l.y,0,1)).getDay(),l.m=0,l.d="W"in l?(l.w+6)%7+7*l.W-(a+5)%7:l.w+7*l.U-(a+6)%7);return"Z"in l?(l.H+=l.Z/100|0,l.M+=l.Z%100,f(l)):s(l)}}function Pt(t,n,e,i){for(var r,u,o=0,c=n.length,a=e.length;o<c;){if(i>=a)return-1;if(37===(r=n.charCodeAt(o++))){if(r=n.charAt(o++),!(u=Dt[r in p?n.charAt(o++):r])||(i=u(t,e,i))<0)return-1}else if(r!=e.charCodeAt(i++))return-1}return i}return At.x=qt(e,At),At.X=qt(c,At),At.c=qt(n,At),Ut.x=qt(e,Ut),Ut.X=qt(c,Ut),Ut.c=qt(n,Ut),{format:function(t){var n=qt(t+="",At);return n.toString=function(){return t},n},parse:function(t){var n=zt(t+="",!1);return n.toString=function(){return t},n},utcFormat:function(t){var n=qt(t+="",Ut);return n.toString=function(){return t},n},utcParse:function(t){var n=zt(t+="",!0);return n.toString=function(){return t},n}}}var p={"-":"",_:" ",0:"0"},_=/^\s*\d+/,b=/^%/,d=/[\\^$*+?|[\]().{}]/g;function v(t,n,e){var i=t<0?"-":"",r=(i?-t:t)+"",u=r.length;return i+(u<e?new Array(e-u+1).join(n)+r:r)}function g(t){return t.replace(d,"\\$&")}function y(t){return new RegExp("^(?:"+t.map(g).join("|")+")","i")}function x(t){for(var n={},e=-1,i=t.length;++e<i;)n[t[e].toLowerCase()]=e;return n}function j(t,n,e){var i=_.exec(n.slice(e,e+1));return i?(t.w=+i[0],e+i[0].length):-1}function O(t,n,e){var i=_.exec(n.slice(e,e+1));return i?(t.u=+i[0],e+i[0].length):-1}function w(t,n,e){var i=_.exec(n.slice(e,e+2));return i?(t.U=+i[0],e+i[0].length):-1}function m(t,n,e){var i=_.exec(n.slice(e,e+2));return i?(t.V=+i[0],e+i[0].length):-1}function M(t,n,e){var i=_.exec(n.slice(e,e+2));return i?(t.W=+i[0],e+i[0].length):-1}function T(t,n,e){var i=_.exec(n.slice(e,e+4));return i?(t.y=+i[0],e+i[0].length):-1}function N(t,n,e){var i=_.exec(n.slice(e,e+2));return i?(t.y=+i[0]+(+i[0]>68?1900:2e3),e+i[0].length):-1}function S(t,n,e){var i=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return i?(t.Z=i[1]?0:-(i[2]+(i[3]||"00")),e+i[0].length):-1}function E(t,n,e){var i=_.exec(n.slice(e,e+1));return i?(t.q=3*i[0]-3,e+i[0].length):-1}function k(t,n,e){var i=_.exec(n.slice(e,e+2));return i?(t.m=i[0]-1,e+i[0].length):-1}function C(t,n,e){var i=_.exec(n.slice(e,e+2));return i?(t.d=+i[0],e+i[0].length):-1}function A(t,n,e){var i=_.exec(n.slice(e,e+3));return i?(t.m=0,t.d=+i[0],e+i[0].length):-1}function U(t,n,e){var i=_.exec(n.slice(e,e+2));return i?(t.H=+i[0],e+i[0].length):-1}function D(t,n,e){var i=_.exec(n.slice(e,e+2));return i?(t.M=+i[0],e+i[0].length):-1}function q(t,n,e){var i=_.exec(n.slice(e,e+2));return i?(t.S=+i[0],e+i[0].length):-1}function z(t,n,e){var i=_.exec(n.slice(e,e+3));return i?(t.L=+i[0],e+i[0].length):-1}function P(t,n,e){var i=_.exec(n.slice(e,e+6));return i?(t.L=Math.floor(i[0]/1e3),e+i[0].length):-1}function F(t,n,e){var i=b.exec(n.slice(e,e+1));return i?e+i[0].length:-1}function Y(t,n,e){var i=_.exec(n.slice(e));return i?(t.Q=+i[0],e+i[0].length):-1}function H(t,n,e){var i=_.exec(n.slice(e));return i?(t.s=+i[0],e+i[0].length):-1}function L(t,n){return v(t.getDate(),n,2)}function R(t,n){return v(t.getHours(),n,2)}function B(t,n){return v(t.getHours()%12||12,n,2)}function X(t,n){return v(1+o.b.count(Object(c.a)(t),t),n,3)}function I(t,n){return v(t.getMilliseconds(),n,3)}function Z(t,n){return I(t,n)+"000"}function V(t,n){return v(t.getMonth()+1,n,2)}function $(t,n){return v(t.getMinutes(),n,2)}function W(t,n){return v(t.getSeconds(),n,2)}function J(t){var n=t.getDay();return 0===n?7:n}function Q(t,n){return v(u.g.count(Object(c.a)(t)-1,t),n,2)}function G(t,n){var e=t.getDay();return t=e>=4||0===e?Object(u.i)(t):u.i.ceil(t),v(u.i.count(Object(c.a)(t),t)+(4===Object(c.a)(t).getDay()),n,2)}function K(t){return t.getDay()}function tt(t,n){return v(u.c.count(Object(c.a)(t)-1,t),n,2)}function nt(t,n){return v(t.getFullYear()%100,n,2)}function et(t,n){return v(t.getFullYear()%1e4,n,4)}function it(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+v(n/60|0,"0",2)+v(n%60,"0",2)}function rt(t,n){return v(t.getUTCDate(),n,2)}function ut(t,n){return v(t.getUTCHours(),n,2)}function ot(t,n){return v(t.getUTCHours()%12||12,n,2)}function ct(t,n){return v(1+r.a.count(Object(a.a)(t),t),n,3)}function at(t,n){return v(t.getUTCMilliseconds(),n,3)}function st(t,n){return at(t,n)+"000"}function ft(t,n){return v(t.getUTCMonth()+1,n,2)}function ht(t,n){return v(t.getUTCMinutes(),n,2)}function lt(t,n){return v(t.getUTCSeconds(),n,2)}function pt(t){var n=t.getUTCDay();return 0===n?7:n}function _t(t,n){return v(i.g.count(Object(a.a)(t)-1,t),n,2)}function bt(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Object(i.i)(t):i.i.ceil(t),v(i.i.count(Object(a.a)(t),t)+(4===Object(a.a)(t).getUTCDay()),n,2)}function dt(t){return t.getUTCDay()}function vt(t,n){return v(i.c.count(Object(a.a)(t)-1,t),n,2)}function gt(t,n){return v(t.getUTCFullYear()%100,n,2)}function yt(t,n){return v(t.getUTCFullYear()%1e4,n,4)}function xt(){return"+0000"}function jt(){return"%"}function Ot(t){return+t}function wt(t){return Math.floor(+t/1e3)}},872:function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var i=e(714),r=e(731),u=Object(i.a)((function(t){t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCDate(t.getUTCDate()+n)}),(function(t,n){return(n-t)/r.a}),(function(t){return t.getUTCDate()-1}));n.a=u;var o=u.range},873:function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var i=e(714),r=Object(i.a)((function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)}),(function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()}),(function(t){return t.getUTCFullYear()}));r.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Object(i.a)((function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)}),(function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)})):null},n.a=r;var u=r.range},874:function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var i=e(714),r=Object(i.a)((function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCMonth(t.getUTCMonth()+n)}),(function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())}),(function(t){return t.getUTCMonth()}));n.a=r;var u=r.range},875:function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var i=e(714),r=e(731),u=Object(i.a)((function(t){t.setUTCMinutes(0,0,0)}),(function(t,n){t.setTime(+t+n*r.b)}),(function(t,n){return(n-t)/r.b}),(function(t){return t.getUTCHours()}));n.a=u;var o=u.range},876:function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var i=e(714),r=e(731),u=Object(i.a)((function(t){t.setUTCSeconds(0,0)}),(function(t,n){t.setTime(+t+n*r.c)}),(function(t,n){return(n-t)/r.c}),(function(t){return t.getUTCMinutes()}));n.a=u;var o=u.range},877:function(t,n,e){"use strict";var i=e(932),r=e(748),u=e(786),o=e(805),c=e(878);n.a=function(){var t=c.a,n=null,e=Object(r.a)(0),a=c.b,s=Object(r.a)(!0),f=null,h=u.a,l=null;function p(r){var u,o,c,p,_,b=r.length,d=!1,v=new Array(b),g=new Array(b);for(null==f&&(l=h(_=Object(i.a)())),u=0;u<=b;++u){if(!(u<b&&s(p=r[u],u,r))===d)if(d=!d)o=u,l.areaStart(),l.lineStart();else{for(l.lineEnd(),l.lineStart(),c=u-1;c>=o;--c)l.point(v[c],g[c]);l.lineEnd(),l.areaEnd()}d&&(v[u]=+t(p,u,r),g[u]=+e(p,u,r),l.point(n?+n(p,u,r):v[u],a?+a(p,u,r):g[u]))}if(_)return l=null,_+""||null}function _(){return Object(o.a)().defined(s).curve(h).context(f)}return p.x=function(e){return arguments.length?(t="function"==typeof e?e:Object(r.a)(+e),n=null,p):t},p.x0=function(n){return arguments.length?(t="function"==typeof n?n:Object(r.a)(+n),p):t},p.x1=function(t){return arguments.length?(n=null==t?null:"function"==typeof t?t:Object(r.a)(+t),p):n},p.y=function(t){return arguments.length?(e="function"==typeof t?t:Object(r.a)(+t),a=null,p):e},p.y0=function(t){return arguments.length?(e="function"==typeof t?t:Object(r.a)(+t),p):e},p.y1=function(t){return arguments.length?(a=null==t?null:"function"==typeof t?t:Object(r.a)(+t),p):a},p.lineX0=p.lineY0=function(){return _().x(t).y(e)},p.lineY1=function(){return _().x(t).y(a)},p.lineX1=function(){return _().x(n).y(e)},p.defined=function(t){return arguments.length?(s="function"==typeof t?t:Object(r.a)(!!t),p):s},p.curve=function(t){return arguments.length?(h=t,null!=f&&(l=h(f)),p):h},p.context=function(t){return arguments.length?(null==t?f=l=null:l=h(f=t),p):f},p}},878:function(t,n,e){"use strict";function i(t){return t[0]}function r(t){return t[1]}e.d(n,"a",(function(){return i})),e.d(n,"b",(function(){return r}))},879:function(t,n,e){"use strict";e.d(n,"b",(function(){return l}));var i=e(932),r=e(880),u=e(881),o=e(882),c=e(884),a=e(883),s=e(885),f=e(886),h=e(748),l=[r.a,u.a,o.a,a.a,c.a,s.a,f.a];n.a=function(){var t=Object(h.a)(r.a),n=Object(h.a)(64),e=null;function u(){var r;if(e||(e=r=Object(i.a)()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+""||null}return u.type=function(n){return arguments.length?(t="function"==typeof n?n:Object(h.a)(n),u):t},u.size=function(t){return arguments.length?(n="function"==typeof t?t:Object(h.a)(+t),u):n},u.context=function(t){return arguments.length?(e=null==t?null:t,u):e},u}},880:function(t,n,e){"use strict";var i=e(785);n.a={draw:function(t,n){var e=Math.sqrt(n/i.j);t.moveTo(e,0),t.arc(0,0,e,0,i.m)}}},881:function(t,n,e){"use strict";n.a={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}}},882:function(t,n,e){"use strict";var i=Math.sqrt(1/3),r=2*i;n.a={draw:function(t,n){var e=Math.sqrt(n/r),u=e*i;t.moveTo(0,-e),t.lineTo(u,0),t.lineTo(0,e),t.lineTo(-u,0),t.closePath()}}},883:function(t,n,e){"use strict";n.a={draw:function(t,n){var e=Math.sqrt(n),i=-e/2;t.rect(i,i,e,e)}}},884:function(t,n,e){"use strict";var i=e(785),r=Math.sin(i.j/10)/Math.sin(7*i.j/10),u=Math.sin(i.m/10)*r,o=-Math.cos(i.m/10)*r;n.a={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=u*e,c=o*e;t.moveTo(0,-e),t.lineTo(r,c);for(var a=1;a<5;++a){var s=i.m*a/5,f=Math.cos(s),h=Math.sin(s);t.lineTo(h*e,-f*e),t.lineTo(f*r-h*c,h*r+f*c)}t.closePath()}}},885:function(t,n,e){"use strict";var i=Math.sqrt(3);n.a={draw:function(t,n){var e=-Math.sqrt(n/(3*i));t.moveTo(0,2*e),t.lineTo(-i*e,-e),t.lineTo(i*e,-e),t.closePath()}}},886:function(t,n,e){"use strict";var i=-.5,r=Math.sqrt(3)/2,u=1/Math.sqrt(12),o=3*(u/2+1);n.a={draw:function(t,n){var e=Math.sqrt(n/o),c=e/2,a=e*u,s=c,f=e*u+e,h=-s,l=f;t.moveTo(c,a),t.lineTo(s,f),t.lineTo(h,l),t.lineTo(i*c-r*a,r*c+i*a),t.lineTo(i*s-r*f,r*s+i*f),t.lineTo(i*h-r*l,r*h+i*l),t.lineTo(i*c+r*a,i*a-r*c),t.lineTo(i*s+r*f,i*f-r*s),t.lineTo(i*h+r*l,i*l-r*h),t.closePath()}}},887:function(t,n,e){"use strict";e.d(n,"a",(function(){return u}));var i=e(806),r=e(788);function u(t,n){this._context=t,this._k=(1-n)/6}u.prototype={areaStart:i.a,areaEnd:i.a,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Object(r.c)(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.b=function t(n){function e(t){return new u(t,n)}return e.tension=function(n){return t(+n)},e}(0)},888:function(t,n,e){"use strict";e.d(n,"a",(function(){return r}));var i=e(788);function r(t,n){this._context=t,this._k=(1-n)/6}r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Object(i.c)(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.b=function t(n){function e(t){return new r(t,n)}return e.tension=function(n){return t(+n)},e}(0)},889:function(t,n,e){"use strict";function i(t){return t<0?-1:1}function r(t,n,e){var r=t._x1-t._x0,u=n-t._x1,o=(t._y1-t._y0)/(r||u<0&&-0),c=(e-t._y1)/(u||r<0&&-0),a=(o*u+c*r)/(r+u);return(i(o)+i(c))*Math.min(Math.abs(o),Math.abs(c),.5*Math.abs(a))||0}function u(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function o(t,n,e){var i=t._x0,r=t._y0,u=t._x1,o=t._y1,c=(u-i)/3;t._context.bezierCurveTo(i+c,r+c*n,u-c,o-c*e,u,o)}function c(t){this._context=t}function a(t){this._context=new s(t)}function s(t){this._context=t}function f(t){return new c(t)}function h(t){return new a(t)}e.d(n,"a",(function(){return f})),e.d(n,"b",(function(){return h})),c.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:o(this,this._t0,u(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,o(this,u(this,e=r(this,t,n)),e);break;default:o(this,this._t0,e=r(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(a.prototype=Object.create(c.prototype)).point=function(t,n){c.prototype.point.call(this,n,t)},s.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,i,r,u){this._context.bezierCurveTo(n,t,i,e,u,r)}}},921:function(t,n,e){"use strict";e.d(n,"a",(function(){return a})),e.d(n,"b",(function(){return c}));var i=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN};var r,u;1===(r=i).length&&(u=r,r=function(t,n){return i(u(t),n)});var o=Array.prototype,c=(o.slice,o.map,function(t,n,e){t=+t,n=+n,e=(r=arguments.length)<2?(n=t,t=0,1):r<3?1:+e;for(var i=-1,r=0|Math.max(0,Math.ceil((n-t)/e)),u=new Array(r);++i<r;)u[i]=t+i*e;return u});Math.sqrt(50),Math.sqrt(10),Math.sqrt(2);var a=function(t){for(var n,e,i,r=t.length,u=-1,o=0;++u<r;)o+=t[u].length;for(e=new Array(o);--r>=0;)for(n=(i=t[r]).length;--n>=0;)e[--o]=i[n];return e}},922:function(t,n,e){"use strict";var i,r=e(802),u=e(801),o=e(844),c=function(t,n){var e=Object(o.a)(t,n);if(!e)return t+"";var i=e[0],r=e[1];return r<0?"0."+new Array(-r).join("0")+i:i.length>r+1?i.slice(0,r+1)+"."+i.slice(r+1):i+new Array(r-i.length+2).join("0")},a={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return c(100*t,n)},r:c,s:function(t,n){var e=Object(o.a)(t,n);if(!e)return t+"";var r=e[0],u=e[1],c=u-(i=3*Math.max(-8,Math.min(8,Math.floor(u/3))))+1,a=r.length;return c===a?r:c>a?r+new Array(c-a+1).join("0"):c>0?r.slice(0,c)+"."+r.slice(c):"0."+new Array(1-c).join("0")+Object(o.a)(t,Math.max(0,n+c-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},s=function(t){return t},f=Array.prototype.map,h=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];n.a=function(t){var n,e,o=void 0===t.grouping||void 0===t.thousands?s:(n=f.call(t.grouping,Number),e=t.thousands+"",function(t,i){for(var r=t.length,u=[],o=0,c=n[0],a=0;r>0&&c>0&&(a+c+1>i&&(c=Math.max(1,i-a)),u.push(t.substring(r-=c,r+c)),!((a+=c+1)>i));)c=n[o=(o+1)%n.length];return u.reverse().join(e)}),c=void 0===t.currency?"":t.currency[0]+"",l=void 0===t.currency?"":t.currency[1]+"",p=void 0===t.decimal?".":t.decimal+"",_=void 0===t.numerals?s:function(t){return function(n){return n.replace(/[0-9]/g,(function(n){return t[+n]}))}}(f.call(t.numerals,String)),b=void 0===t.percent?"%":t.percent+"",d=void 0===t.minus?"-":t.minus+"",v=void 0===t.nan?"NaN":t.nan+"";function g(t){var n=(t=Object(u.b)(t)).fill,e=t.align,r=t.sign,s=t.symbol,f=t.zero,g=t.width,y=t.comma,x=t.precision,j=t.trim,O=t.type;"n"===O?(y=!0,O="g"):a[O]||(void 0===x&&(x=12),j=!0,O="g"),(f||"0"===n&&"="===e)&&(f=!0,n="0",e="=");var w="$"===s?c:"#"===s&&/[boxX]/.test(O)?"0"+O.toLowerCase():"",m="$"===s?l:/[%p]/.test(O)?b:"",M=a[O],T=/[defgprs%]/.test(O);function N(t){var u,c,a,s=w,l=m;if("c"===O)l=M(t)+l,t="";else{var b=(t=+t)<0||1/t<0;if(t=isNaN(t)?v:M(Math.abs(t),x),j&&(t=function(t){t:for(var n,e=t.length,i=1,r=-1;i<e;++i)switch(t[i]){case".":r=n=i;break;case"0":0===r&&(r=i),n=i;break;default:if(!+t[i])break t;r>0&&(r=0)}return r>0?t.slice(0,r)+t.slice(n+1):t}(t)),b&&0==+t&&"+"!==r&&(b=!1),s=(b?"("===r?r:d:"-"===r||"("===r?"":r)+s,l=("s"===O?h[8+i/3]:"")+l+(b&&"("===r?")":""),T)for(u=-1,c=t.length;++u<c;)if(48>(a=t.charCodeAt(u))||a>57){l=(46===a?p+t.slice(u+1):t.slice(u))+l,t=t.slice(0,u);break}}y&&!f&&(t=o(t,1/0));var N=s.length+t.length+l.length,S=N<g?new Array(g-N+1).join(n):"";switch(y&&f&&(t=o(S+t,S.length?g-l.length:1/0),S=""),e){case"<":t=s+t+l+S;break;case"=":t=s+S+t+l;break;case"^":t=S.slice(0,N=S.length>>1)+s+t+l+S.slice(N);break;default:t=S+s+t+l}return _(t)}return x=void 0===x?6:/[gprs]/.test(O)?Math.max(1,Math.min(21,x)):Math.max(0,Math.min(20,x)),N.toString=function(){return t+""},N}return{format:g,formatPrefix:function(t,n){var e=g(((t=Object(u.b)(t)).type="f",t)),i=3*Math.max(-8,Math.min(8,Math.floor(Object(r.a)(n)/3))),o=Math.pow(10,-i),c=h[8+i/3];return function(t){return e(o*t)+c}}}}},923:function(t,n,e){"use strict";e.d(n,"a",(function(){return l})),e.d(n,"b",(function(){return p}));var i,r,u,o,c=e(774),a=180/Math.PI,s={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},f=function(t,n,e,i,r,u){var o,c,s;return(o=Math.sqrt(t*t+n*n))&&(t/=o,n/=o),(s=t*e+n*i)&&(e-=t*s,i-=n*s),(c=Math.sqrt(e*e+i*i))&&(e/=c,i/=c,s/=c),t*i<n*e&&(t=-t,n=-n,s=-s,o=-o),{translateX:r,translateY:u,rotate:Math.atan2(n,t)*a,skewX:Math.atan(s)*a,scaleX:o,scaleY:c}};function h(t,n,e,i){function r(t){return t.length?t.pop()+" ":""}return function(u,o){var a=[],s=[];return u=t(u),o=t(o),function(t,i,r,u,o,a){if(t!==r||i!==u){var s=o.push("translate(",null,n,null,e);a.push({i:s-4,x:Object(c.a)(t,r)},{i:s-2,x:Object(c.a)(i,u)})}else(r||u)&&o.push("translate("+r+n+u+e)}(u.translateX,u.translateY,o.translateX,o.translateY,a,s),function(t,n,e,u){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),u.push({i:e.push(r(e)+"rotate(",null,i)-2,x:Object(c.a)(t,n)})):n&&e.push(r(e)+"rotate("+n+i)}(u.rotate,o.rotate,a,s),function(t,n,e,u){t!==n?u.push({i:e.push(r(e)+"skewX(",null,i)-2,x:Object(c.a)(t,n)}):n&&e.push(r(e)+"skewX("+n+i)}(u.skewX,o.skewX,a,s),function(t,n,e,i,u,o){if(t!==e||n!==i){var a=u.push(r(u)+"scale(",null,",",null,")");o.push({i:a-4,x:Object(c.a)(t,e)},{i:a-2,x:Object(c.a)(n,i)})}else 1===e&&1===i||u.push(r(u)+"scale("+e+","+i+")")}(u.scaleX,u.scaleY,o.scaleX,o.scaleY,a,s),u=o=null,function(t){for(var n,e=-1,i=s.length;++e<i;)a[(n=s[e]).i]=n.x(t);return a.join("")}}}var l=h((function(t){return"none"===t?s:(i||(i=document.createElement("DIV"),r=document.documentElement,u=document.defaultView),i.style.transform=t,t=u.getComputedStyle(r.appendChild(i),null).getPropertyValue("transform"),r.removeChild(i),t=t.slice(7,-1).split(","),f(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))}),"px, ","px)","deg)"),p=h((function(t){return null==t?s:(o||(o=document.createElementNS("http://www.w3.org/2000/svg","g")),o.setAttribute("transform",t),(t=o.transform.baseVal.consolidate())?(t=t.matrix,f(t.a,t.b,t.c,t.d,t.e,t.f)):s)}),", ",")",")")},924:function(t,n,e){"use strict";e.d(n,"a",(function(){return c}));var i=e(777),r=function(t){return function(){return t}},u=e(708),o=e(778);function c(t,n,e,r,o,c){if(e){var s=Object(u.g)(n),f=Object(u.t)(n),h=r*e;null==o?(o=n+r*u.w,c=n-h/2):(o=a(s,o),c=a(s,c),(r>0?o<c:o>c)&&(o+=r*u.w));for(var l,p=o;r>0?p>c:p<c;p-=h)l=Object(i.g)([s,-f*Object(u.g)(p),-f*Object(u.t)(p)]),t.point(l[0],l[1])}}function a(t,n){(n=Object(i.a)(n))[0]-=t,Object(i.e)(n);var e=Object(u.b)(-n[1]);return((-n[2]<0?-e:e)+u.w-u.i)%u.w}n.b=function(){var t,n,e=r([0,0]),i=r(90),a=r(6),s={point:function(e,i){t.push(e=n(e,i)),e[0]*=u.h,e[1]*=u.h}};function f(){var r=e.apply(this,arguments),f=i.apply(this,arguments)*u.r,h=a.apply(this,arguments)*u.r;return t=[],n=Object(o.b)(-r[0]*u.r,-r[1]*u.r,0).invert,c(s,f,h,1),r={type:"Polygon",coordinates:[t]},t=n=null,r}return f.center=function(t){return arguments.length?(e="function"==typeof t?t:r([+t[0],+t[1]]),f):e},f.radius=function(t){return arguments.length?(i="function"==typeof t?t:r(+t),f):i},f.precision=function(t){return arguments.length?(a="function"==typeof t?t:r(+t),f):a},f}},925:function(t,n,e){"use strict";var i=Array.prototype.slice;n.a=function(t){for(var n,e,u=0,c=(t=function(t){for(var n,e,i=t.length;i;)e=Math.random()*i--|0,n=t[i],t[i]=t[e],t[e]=n;return t}(i.call(t))).length,s=[];u<c;)n=t[u],e&&o(e,n)?++u:(e=a(s=r(s,n)),u=0);return e};function r(t,n){var e,i;if(c(n,t))return[n];for(e=0;e<t.length;++e)if(u(n,t[e])&&c(s(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(i=e+1;i<t.length;++i)if(u(s(t[e],t[i]),n)&&u(s(t[e],n),t[i])&&u(s(t[i],n),t[e])&&c(f(t[e],t[i],n),t))return[t[e],t[i],n];throw new Error}function u(t,n){var e=t.r-n.r,i=n.x-t.x,r=n.y-t.y;return e<0||e*e<i*i+r*r}function o(t,n){var e=t.r-n.r+1e-6,i=n.x-t.x,r=n.y-t.y;return e>0&&e*e>i*i+r*r}function c(t,n){for(var e=0;e<n.length;++e)if(!o(t,n[e]))return!1;return!0}function a(t){switch(t.length){case 1:return{x:(n=t[0]).x,y:n.y,r:n.r};case 2:return s(t[0],t[1]);case 3:return f(t[0],t[1],t[2])}var n}function s(t,n){var e=t.x,i=t.y,r=t.r,u=n.x,o=n.y,c=n.r,a=u-e,s=o-i,f=c-r,h=Math.sqrt(a*a+s*s);return{x:(e+u+a/h*f)/2,y:(i+o+s/h*f)/2,r:(h+r+c)/2}}function f(t,n,e){var i=t.x,r=t.y,u=t.r,o=n.x,c=n.y,a=n.r,s=e.x,f=e.y,h=e.r,l=i-o,p=i-s,_=r-c,b=r-f,d=a-u,v=h-u,g=i*i+r*r-u*u,y=g-o*o-c*c+a*a,x=g-s*s-f*f+h*h,j=p*_-l*b,O=(_*x-b*y)/(2*j)-i,w=(b*d-_*v)/j,m=(p*y-l*x)/(2*j)-r,M=(l*v-p*d)/j,T=w*w+M*M-1,N=2*(u+O*w+m*M),S=O*O+m*m-u*u,E=-(T?(N+Math.sqrt(N*N-4*T*S))/(2*T):S/N);return{x:i+O+w*E,y:r+m+M*E,r:E}}},929:function(t,n,e){"use strict";var i={value:function(){}};function r(){for(var t,n=0,e=arguments.length,i={};n<e;++n){if(!(t=arguments[n]+"")||t in i||/[\s.]/.test(t))throw new Error("illegal type: "+t);i[t]=[]}return new u(i)}function u(t){this._=t}function o(t,n){return t.trim().split(/^|\s+/).map((function(t){var e="",i=t.indexOf(".");if(i>=0&&(e=t.slice(i+1),t=t.slice(0,i)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}}))}function c(t,n){for(var e,i=0,r=t.length;i<r;++i)if((e=t[i]).name===n)return e.value}function a(t,n,e){for(var r=0,u=t.length;r<u;++r)if(t[r].name===n){t[r]=i,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}u.prototype=r.prototype={constructor:u,on:function(t,n){var e,i=this._,r=o(t+"",i),u=-1,s=r.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++u<s;)if(e=(t=r[u]).type)i[e]=a(i[e],t.name,n);else if(null==n)for(e in i)i[e]=a(i[e],t.name,null);return this}for(;++u<s;)if((e=(t=r[u]).type)&&(e=c(i[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new u(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,i,r=new Array(e),u=0;u<e;++u)r[u]=arguments[u+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(u=0,e=(i=this._[t]).length;u<e;++u)i[u].value.apply(n,r)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var i=this._[t],r=0,u=i.length;r<u;++r)i[r].value.apply(n,e)}},n.a=r},931:function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},932:function(t,n,e){"use strict";var i=Math.PI,r=2*i,u=r-1e-6;function o(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function c(){return new o}o.prototype=c.prototype={constructor:o,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,i){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+i)},bezierCurveTo:function(t,n,e,i,r,u){this._+="C"+ +t+","+ +n+","+ +e+","+ +i+","+(this._x1=+r)+","+(this._y1=+u)},arcTo:function(t,n,e,r,u){t=+t,n=+n,e=+e,r=+r,u=+u;var o=this._x1,c=this._y1,a=e-t,s=r-n,f=o-t,h=c-n,l=f*f+h*h;if(u<0)throw new Error("negative radius: "+u);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(l>1e-6)if(Math.abs(h*a-s*f)>1e-6&&u){var p=e-o,_=r-c,b=a*a+s*s,d=p*p+_*_,v=Math.sqrt(b),g=Math.sqrt(l),y=u*Math.tan((i-Math.acos((b+l-d)/(2*v*g)))/2),x=y/g,j=y/v;Math.abs(x-1)>1e-6&&(this._+="L"+(t+x*f)+","+(n+x*h)),this._+="A"+u+","+u+",0,0,"+ +(h*p>f*_)+","+(this._x1=t+j*a)+","+(this._y1=n+j*s)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,o,c,a){t=+t,n=+n,a=!!a;var s=(e=+e)*Math.cos(o),f=e*Math.sin(o),h=t+s,l=n+f,p=1^a,_=a?o-c:c-o;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+h+","+l:(Math.abs(this._x1-h)>1e-6||Math.abs(this._y1-l)>1e-6)&&(this._+="L"+h+","+l),e&&(_<0&&(_=_%r+r),_>u?this._+="A"+e+","+e+",0,1,"+p+","+(t-s)+","+(n-f)+"A"+e+","+e+",0,1,"+p+","+(this._x1=h)+","+(this._y1=l):_>1e-6&&(this._+="A"+e+","+e+",0,"+ +(_>=i)+","+p+","+(this._x1=t+e*Math.cos(c))+","+(this._y1=n+e*Math.sin(c))))},rect:function(t,n,e,i){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +i+"h"+-e+"Z"},toString:function(){return this._}},n.a=c},933:function(t,n,e){"use strict";e.d(n,"a",(function(){return i})),e.d(n,"b",(function(){return r}));var i=Math.PI/180,r=180/Math.PI},934:function(t,n,e){"use strict";e.d(n,"a",(function(){return b}));var i=e(838),r=e(757),u=e(933),o=-.14861,c=1.78277,a=-.29227,s=-.90649,f=1.97294,h=f*s,l=f*c,p=c*a-s*o;function _(t){if(t instanceof d)return new d(t.h,t.s,t.l,t.opacity);t instanceof r.b||(t=Object(r.h)(t));var n=t.r/255,e=t.g/255,i=t.b/255,o=(p*i+h*n-l*e)/(p+h-l),c=i-o,_=(f*(e-o)-a*c)/s,b=Math.sqrt(_*_+c*c)/(f*o*(1-o)),v=b?Math.atan2(_,c)*u.b-120:NaN;return new d(v<0?v+360:v,b,o,t.opacity)}function b(t,n,e,i){return 1===arguments.length?_(t):new d(t,n,e,null==i?1:i)}function d(t,n,e,i){this.h=+t,this.s=+n,this.l=+e,this.opacity=+i}Object(i.a)(d,b,Object(i.b)(r.a,{brighter:function(t){return t=null==t?r.c:Math.pow(r.c,t),new d(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?r.d:Math.pow(r.d,t),new d(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*u.a,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),i=Math.cos(t),h=Math.sin(t);return new r.b(255*(n+e*(o*i+c*h)),255*(n+e*(a*i+s*h)),255*(n+e*(f*i)),this.opacity)}}))},935:function(t,n,e){"use strict";var i=e(802);n.a=function(t){return Math.max(0,-Object(i.a)(Math.abs(t)))}},936:function(t,n,e){"use strict";var i=e(802);n.a=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Object(i.a)(n)/3)))-Object(i.a)(Math.abs(t)))}},937:function(t,n,e){"use strict";var i=e(802);n.a=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,Object(i.a)(n)-Object(i.a)(t))+1}},938:function(t,n,e){"use strict";var i,r,u,o,c,a,s,f,h,l,p=e(759),_=e(845),b=e(777),d=e(708),v=e(740),g=Object(p.a)(),y={point:x,lineStart:O,lineEnd:w,polygonStart:function(){y.point=m,y.lineStart=M,y.lineEnd=T,g.reset(),_.b.polygonStart()},polygonEnd:function(){_.b.polygonEnd(),y.point=x,y.lineStart=O,y.lineEnd=w,_.a<0?(i=-(u=180),r=-(o=90)):g>d.i?o=90:g<-d.i&&(r=-90),l[0]=i,l[1]=u},sphere:function(){i=-(u=180),r=-(o=90)}};function x(t,n){h.push(l=[i=t,u=t]),n<r&&(r=n),n>o&&(o=n)}function j(t,n){var e=Object(b.a)([t*d.r,n*d.r]);if(f){var a=Object(b.c)(f,e),s=[a[1],-a[0],0],p=Object(b.c)(s,a);Object(b.e)(p),p=Object(b.g)(p);var _,v=t-c,g=v>0?1:-1,y=p[0]*d.h*g,x=Object(d.a)(v)>180;x^(g*c<y&&y<g*t)?(_=p[1]*d.h)>o&&(o=_):x^(g*c<(y=(y+360)%360-180)&&y<g*t)?(_=-p[1]*d.h)<r&&(r=_):(n<r&&(r=n),n>o&&(o=n)),x?t<c?N(i,t)>N(i,u)&&(u=t):N(t,u)>N(i,u)&&(i=t):u>=i?(t<i&&(i=t),t>u&&(u=t)):t>c?N(i,t)>N(i,u)&&(u=t):N(t,u)>N(i,u)&&(i=t)}else h.push(l=[i=t,u=t]);n<r&&(r=n),n>o&&(o=n),f=e,c=t}function O(){y.point=j}function w(){l[0]=i,l[1]=u,y.point=x,f=null}function m(t,n){if(f){var e=t-c;g.add(Object(d.a)(e)>180?e+(e>0?360:-360):e)}else a=t,s=n;_.b.point(t,n),j(t,n)}function M(){_.b.lineStart()}function T(){m(a,s),_.b.lineEnd(),Object(d.a)(g)>d.i&&(i=-(u=180)),l[0]=i,l[1]=u,f=null}function N(t,n){return(n-=t)<0?n+360:n}function S(t,n){return t[0]-n[0]}function E(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}n.a=function(t){var n,e,c,a,s,f,p;if(o=u=-(i=r=1/0),h=[],Object(v.a)(t,y),e=h.length){for(h.sort(S),n=1,s=[c=h[0]];n<e;++n)E(c,(a=h[n])[0])||E(c,a[1])?(N(c[0],a[1])>N(c[0],c[1])&&(c[1]=a[1]),N(a[0],c[1])>N(c[0],c[1])&&(c[0]=a[0])):s.push(c=a);for(f=-1/0,n=0,c=s[e=s.length-1];n<=e;c=a,++n)a=s[n],(p=N(c[1],a[0]))>f&&(f=p,i=a[0],u=c[1])}return h=l=null,i===1/0||r===1/0?[[NaN,NaN],[NaN,NaN]]:[[i,r],[u,o]]}},939:function(t,n,e){"use strict";var i,r,u,o,c,a,s,f,h,l,p,_,b,d,v,g,y=e(708),x=e(739),j=e(740),O={sphere:x.a,point:w,lineStart:M,lineEnd:S,polygonStart:function(){O.lineStart=E,O.lineEnd=k},polygonEnd:function(){O.lineStart=M,O.lineEnd=S}};function w(t,n){t*=y.r,n*=y.r;var e=Object(y.g)(n);m(e*Object(y.g)(t),e*Object(y.t)(t),Object(y.t)(n))}function m(t,n,e){++i,u+=(t-u)/i,o+=(n-o)/i,c+=(e-c)/i}function M(){O.point=T}function T(t,n){t*=y.r,n*=y.r;var e=Object(y.g)(n);d=e*Object(y.g)(t),v=e*Object(y.t)(t),g=Object(y.t)(n),O.point=N,m(d,v,g)}function N(t,n){t*=y.r,n*=y.r;var e=Object(y.g)(n),i=e*Object(y.g)(t),u=e*Object(y.t)(t),o=Object(y.t)(n),c=Object(y.e)(Object(y.u)((c=v*o-g*u)*c+(c=g*i-d*o)*c+(c=d*u-v*i)*c),d*i+v*u+g*o);r+=c,a+=c*(d+(d=i)),s+=c*(v+(v=u)),f+=c*(g+(g=o)),m(d,v,g)}function S(){O.point=w}function E(){O.point=C}function k(){A(_,b),O.point=w}function C(t,n){_=t,b=n,t*=y.r,n*=y.r,O.point=A;var e=Object(y.g)(n);d=e*Object(y.g)(t),v=e*Object(y.t)(t),g=Object(y.t)(n),m(d,v,g)}function A(t,n){t*=y.r,n*=y.r;var e=Object(y.g)(n),i=e*Object(y.g)(t),u=e*Object(y.t)(t),o=Object(y.t)(n),c=v*o-g*u,_=g*i-d*o,b=d*u-v*i,x=Object(y.u)(c*c+_*_+b*b),j=Object(y.c)(x),O=x&&-j/x;h+=O*c,l+=O*_,p+=O*b,r+=j,a+=j*(d+(d=i)),s+=j*(v+(v=u)),f+=j*(g+(g=o)),m(d,v,g)}n.a=function(t){i=r=u=o=c=a=s=f=h=l=p=0,Object(j.a)(t,O);var n=h,e=l,_=p,b=n*n+e*e+_*_;return b<y.j&&(n=a,e=s,_=f,r<y.i&&(n=u,e=o,_=c),(b=n*n+e*e+_*_)<y.j)?[NaN,NaN]:[Object(y.e)(e,n)*y.h,Object(y.c)(_/Object(y.u)(b))*y.h]}},940:function(t,n,e){"use strict";n.a=function(t,n){function e(e,i){return e=t(e,i),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,i){return(e=n.invert(e,i))&&t.invert(e[0],e[1])}),e}},941:function(t,n,e){"use strict";var i=e(942),r=e(944),u=e(708),o=e(943),c=e(921);function a(t){return t.length>1}function s(t,n){return((t=t.x)[0]<0?t[1]-u.l-u.i:u.l-t[1])-((n=n.x)[0]<0?n[1]-u.l-u.i:u.l-n[1])}n.a=function(t,n,e,u){return function(f){var h,l,p,_=n(f),b=Object(i.a)(),d=n(b),v=!1,g={point:y,lineStart:j,lineEnd:O,polygonStart:function(){g.point=w,g.lineStart=m,g.lineEnd=M,l=[],h=[]},polygonEnd:function(){g.point=y,g.lineStart=j,g.lineEnd=O,l=Object(c.a)(l);var t=Object(o.a)(h,u);l.length?(v||(f.polygonStart(),v=!0),Object(r.a)(l,s,t,e,f)):t&&(v||(f.polygonStart(),v=!0),f.lineStart(),e(null,null,1,f),f.lineEnd()),v&&(f.polygonEnd(),v=!1),l=h=null},sphere:function(){f.polygonStart(),f.lineStart(),e(null,null,1,f),f.lineEnd(),f.polygonEnd()}};function y(n,e){t(n,e)&&f.point(n,e)}function x(t,n){_.point(t,n)}function j(){g.point=x,_.lineStart()}function O(){g.point=y,_.lineEnd()}function w(t,n){p.push([t,n]),d.point(t,n)}function m(){d.lineStart(),p=[]}function M(){w(p[0][0],p[0][1]),d.lineEnd();var t,n,e,i,r=d.clean(),u=b.result(),o=u.length;if(p.pop(),h.push(p),p=null,o)if(1&r){if((n=(e=u[0]).length-1)>0){for(v||(f.polygonStart(),v=!0),f.lineStart(),t=0;t<n;++t)f.point((i=e[t])[0],i[1]);f.lineEnd()}}else o>1&&2&r&&u.push(u.pop().concat(u.shift())),l.push(u.filter(a))}return g}}},942:function(t,n,e){"use strict";var i=e(739);n.a=function(){var t,n=[];return{point:function(n,e,i){t.push([n,e,i])},lineStart:function(){n.push(t=[])},lineEnd:i.a,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}}},943:function(t,n,e){"use strict";var i=e(759),r=e(777),u=e(708),o=Object(i.a)();function c(t){return Object(u.a)(t[0])<=u.o?t[0]:Object(u.s)(t[0])*((Object(u.a)(t[0])+u.o)%u.w-u.o)}n.a=function(t,n){var e=c(n),i=n[1],a=Object(u.t)(i),s=[Object(u.t)(e),-Object(u.g)(e),0],f=0,h=0;o.reset(),1===a?i=u.l+u.i:-1===a&&(i=-u.l-u.i);for(var l=0,p=t.length;l<p;++l)if(b=(_=t[l]).length)for(var _,b,d=_[b-1],v=c(d),g=d[1]/2+u.q,y=Object(u.t)(g),x=Object(u.g)(g),j=0;j<b;++j,v=w,y=M,x=T,d=O){var O=_[j],w=c(O),m=O[1]/2+u.q,M=Object(u.t)(m),T=Object(u.g)(m),N=w-v,S=N>=0?1:-1,E=S*N,k=E>u.o,C=y*M;if(o.add(Object(u.e)(C*S*Object(u.t)(E),x*T+C*Object(u.g)(E))),f+=k?N+S*u.w:N,k^v>=e^w>=e){var A=Object(r.c)(Object(r.a)(d),Object(r.a)(O));Object(r.e)(A);var U=Object(r.c)(s,A);Object(r.e)(U);var D=(k^N>=0?-1:1)*Object(u.c)(U[2]);(i>D||i===D&&(A[0]||A[1]))&&(h+=k^N>=0?1:-1)}}return(f<-u.i||f<u.i&&o<-u.i)^1&h}},944:function(t,n,e){"use strict";var i=e(945),r=e(708);function u(t,n,e,i){this.x=t,this.z=n,this.o=e,this.e=i,this.v=!1,this.n=this.p=null}function o(t){if(n=t.length){for(var n,e,i=0,r=t[0];++i<n;)r.n=e=t[i],e.p=r,r=e;r.n=e=t[0],e.p=r}}n.a=function(t,n,e,c,a){var s,f,h=[],l=[];if(t.forEach((function(t){if(!((n=t.length-1)<=0)){var n,e,o=t[0],c=t[n];if(Object(i.a)(o,c)){if(!o[2]&&!c[2]){for(a.lineStart(),s=0;s<n;++s)a.point((o=t[s])[0],o[1]);return void a.lineEnd()}c[0]+=2*r.i}h.push(e=new u(o,t,null,!0)),l.push(e.o=new u(o,null,e,!1)),h.push(e=new u(c,t,null,!1)),l.push(e.o=new u(c,null,e,!0))}})),h.length){for(l.sort(n),o(h),o(l),s=0,f=l.length;s<f;++s)l[s].e=e=!e;for(var p,_,b=h[0];;){for(var d=b,v=!0;d.v;)if((d=d.n)===b)return;p=d.z,a.lineStart();do{if(d.v=d.o.v=!0,d.e){if(v)for(s=0,f=p.length;s<f;++s)a.point((_=p[s])[0],_[1]);else c(d.x,d.n.x,1,a);d=d.n}else{if(v)for(p=d.p.z,s=p.length-1;s>=0;--s)a.point((_=p[s])[0],_[1]);else c(d.x,d.p.x,-1,a);d=d.p}p=(d=d.o).z,v=!v}while(!d.v);a.lineEnd()}}}},945:function(t,n,e){"use strict";var i=e(708);n.a=function(t,n){return Object(i.a)(t[0]-n[0])<i.i&&Object(i.a)(t[1]-n[1])<i.i}},946:function(t,n,e){"use strict";var i=e(739),r=1/0,u=r,o=-r,c=o,a={point:function(t,n){t<r&&(r=t);t>o&&(o=t);n<u&&(u=n);n>c&&(c=n)},lineStart:i.a,lineEnd:i.a,polygonStart:i.a,polygonEnd:i.a,result:function(){var t=[[r,u],[o,c]];return o=c=-(u=r=1/0),t}};n.a=a},947:function(t,n,e){"use strict";var i=e(708),r=e(850),u=e(795),o=e(852);n.a=function(){var t,n,e,c,a,s,f=Object(r.a)(),h=Object(u.b)().rotate([154,0]).center([-2,58.5]).parallels([55,65]),l=Object(u.b)().rotate([157,0]).center([-3,19.9]).parallels([8,18]),p={point:function(t,n){s=[t,n]}};function _(t){var n=t[0],i=t[1];return s=null,e.point(n,i),s||(c.point(n,i),s)||(a.point(n,i),s)}function b(){return t=n=null,_}return _.invert=function(t){var n=f.scale(),e=f.translate(),i=(t[0]-e[0])/n,r=(t[1]-e[1])/n;return(r>=.12&&r<.234&&i>=-.425&&i<-.214?h:r>=.166&&r<.234&&i>=-.214&&i<-.115?l:f).invert(t)},_.stream=function(e){return t&&n===e?t:(i=[f.stream(n=e),h.stream(e),l.stream(e)],r=i.length,t={point:function(t,n){for(var e=-1;++e<r;)i[e].point(t,n)},sphere:function(){for(var t=-1;++t<r;)i[t].sphere()},lineStart:function(){for(var t=-1;++t<r;)i[t].lineStart()},lineEnd:function(){for(var t=-1;++t<r;)i[t].lineEnd()},polygonStart:function(){for(var t=-1;++t<r;)i[t].polygonStart()},polygonEnd:function(){for(var t=-1;++t<r;)i[t].polygonEnd()}});var i,r},_.precision=function(t){return arguments.length?(f.precision(t),h.precision(t),l.precision(t),b()):f.precision()},_.scale=function(t){return arguments.length?(f.scale(t),h.scale(.35*t),l.scale(t),_.translate(f.translate())):f.scale()},_.translate=function(t){if(!arguments.length)return f.translate();var n=f.scale(),r=+t[0],u=+t[1];return e=f.translate(t).clipExtent([[r-.455*n,u-.238*n],[r+.455*n,u+.238*n]]).stream(p),c=h.translate([r-.307*n,u+.201*n]).clipExtent([[r-.425*n+i.i,u+.12*n+i.i],[r-.214*n-i.i,u+.234*n-i.i]]).stream(p),a=l.translate([r-.205*n,u+.212*n]).clipExtent([[r-.214*n+i.i,u+.166*n+i.i],[r-.115*n-i.i,u+.234*n-i.i]]).stream(p),b()},_.fitExtent=function(t,n){return Object(o.a)(_,t,n)},_.fitSize=function(t,n){return Object(o.c)(_,t,n)},_.fitWidth=function(t,n){return Object(o.d)(_,t,n)},_.fitHeight=function(t,n){return Object(o.b)(_,t,n)},_.scale(1070)}},948:function(t,n,e){"use strict";var i=e(794),r=e(849),u=e(779),o=e(852),c=e(708);n.a=function(){var t,n,e,a,s,f,h,l=1,p=0,_=0,b=1,d=1,v=0,g=null,y=1,x=1,j=Object(u.b)({point:function(t,n){var e=m([t,n]);this.stream.point(e[0],e[1])}}),O=r.a;function w(){return y=l*b,x=l*d,f=h=null,m}function m(e){var i=e[0]*y,r=e[1]*x;if(v){var u=r*t-i*n;i=i*t+r*n,r=u}return[i+p,r+_]}return m.invert=function(e){var i=e[0]-p,r=e[1]-_;if(v){var u=r*t+i*n;i=i*t-r*n,r=u}return[i/y,r/x]},m.stream=function(t){return f&&h===t?f:f=j(O(h=t))},m.postclip=function(t){return arguments.length?(O=t,g=e=a=s=null,w()):O},m.clipExtent=function(t){return arguments.length?(O=null==t?(g=e=a=s=null,r.a):Object(i.a)(g=+t[0][0],e=+t[0][1],a=+t[1][0],s=+t[1][1]),w()):null==g?null:[[g,e],[a,s]]},m.scale=function(t){return arguments.length?(l=+t,w()):l},m.translate=function(t){return arguments.length?(p=+t[0],_=+t[1],w()):[p,_]},m.angle=function(e){return arguments.length?(v=e%360*c.r,n=Object(c.t)(v),t=Object(c.g)(v),w()):v*c.h},m.reflectX=function(t){return arguments.length?(b=t?-1:1,w()):b<0},m.reflectY=function(t){return arguments.length?(d=t?-1:1,w()):d<0},m.fitExtent=function(t,n){return Object(o.a)(m,t,n)},m.fitSize=function(t,n){return Object(o.c)(m,t,n)},m.fitWidth=function(t,n){return Object(o.d)(m,t,n)},m.fitHeight=function(t,n){return Object(o.b)(m,t,n)},m}},949:function(t,n,e){"use strict";function i(t,n){return t.parent===n.parent?1:2}function r(t,n){return t+n.x}function u(t,n){return Math.max(t,n.y)}n.a=function(){var t=i,n=1,e=1,o=!1;function c(i){var c,a=0;i.eachAfter((function(n){var e=n.children;e?(n.x=function(t){return t.reduce(r,0)/t.length}(e),n.y=function(t){return 1+t.reduce(u,0)}(e)):(n.x=c?a+=t(n,c):0,n.y=0,c=n)}));var s=function(t){for(var n;n=t.children;)t=n[0];return t}(i),f=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),h=s.x-t(s,f)/2,l=f.x+t(f,s)/2;return i.eachAfter(o?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-h)/(l-h)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return c.separation=function(n){return arguments.length?(t=n,c):t},c.size=function(t){return arguments.length?(o=!1,n=+t[0],e=+t[1],c):o?null:[n,e]},c.nodeSize=function(t){return arguments.length?(o=!0,n=+t[0],e=+t[1],c):o?[n,e]:null},c}},950:function(t,n,e){"use strict";var i=e(864),r=e(863),u=e(951);function o(t){return Math.sqrt(t.value)}function c(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function a(t,n){return function(e){if(r=e.children){var r,u,o,c=r.length,a=t(e)*n||0;if(a)for(u=0;u<c;++u)r[u].r+=a;if(o=Object(i.b)(r),a)for(u=0;u<c;++u)r[u].r-=a;e.r=o+a}}}function s(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}n.a=function(){var t=null,n=1,e=1,i=u.a;function f(r){return r.x=n/2,r.y=e/2,t?r.eachBefore(c(t)).eachAfter(a(i,.5)).eachBefore(s(1)):r.eachBefore(c(o)).eachAfter(a(u.a,1)).eachAfter(a(i,r.r/Math.min(n,e))).eachBefore(s(Math.min(n,e)/(2*r.r))),r}return f.radius=function(n){return arguments.length?(t=Object(r.a)(n),f):t},f.size=function(t){return arguments.length?(n=+t[0],e=+t[1],f):[n,e]},f.padding=function(t){return arguments.length?(i="function"==typeof t?t:Object(u.b)(+t),f):i},f}},951:function(t,n,e){"use strict";function i(){return 0}e.d(n,"a",(function(){return i})),n.b=function(t){return function(){return t}}},952:function(t,n,e){"use strict";var i=e(953),r=e(760);n.a=function(){var t=1,n=1,e=0,u=!1;function o(o){var c=o.height+1;return o.x0=o.y0=e,o.x1=t,o.y1=n/c,o.eachBefore(function(t,n){return function(i){i.children&&Object(r.a)(i,i.x0,t*(i.depth+1)/n,i.x1,t*(i.depth+2)/n);var u=i.x0,o=i.y0,c=i.x1-e,a=i.y1-e;c<u&&(u=c=(u+c)/2),a<o&&(o=a=(o+a)/2),i.x0=u,i.y0=o,i.x1=c,i.y1=a}}(n,c)),u&&o.eachBefore(i.a),o}return o.round=function(t){return arguments.length?(u=!!t,o):u},o.size=function(e){return arguments.length?(t=+e[0],n=+e[1],o):[t,n]},o.padding=function(t){return arguments.length?(e=+t,o):e},o}},953:function(t,n,e){"use strict";n.a=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)}},954:function(t,n,e){"use strict";var i=e(863),r=e(834),u={depth:-1},o={};function c(t){return t.id}function a(t){return t.parentId}n.a=function(){var t=c,n=a;function e(e){var i,c,a,s,f,h,l,p=e.length,_=new Array(p),b={};for(c=0;c<p;++c)i=e[c],f=_[c]=new r.a(i),null!=(h=t(i,c,e))&&(h+="")&&(b[l="$"+(f.id=h)]=l in b?o:f);for(c=0;c<p;++c)if(f=_[c],null!=(h=n(e[c],c,e))&&(h+="")){if(!(s=b["$"+h]))throw new Error("missing: "+h);if(s===o)throw new Error("ambiguous: "+h);s.children?s.children.push(f):s.children=[f],f.parent=s}else{if(a)throw new Error("multiple roots");a=f}if(!a)throw new Error("no root");if(a.parent=u,a.eachBefore((function(t){t.depth=t.parent.depth+1,--p})).eachBefore(r.b),a.parent=null,p>0)throw new Error("cycle");return a}return e.id=function(n){return arguments.length?(t=Object(i.b)(n),e):t},e.parentId=function(t){return arguments.length?(n=Object(i.b)(t),e):n},e}},955:function(t,n,e){"use strict";var i=e(834);function r(t,n){return t.parent===n.parent?1:2}function u(t){var n=t.children;return n?n[0]:t.t}function o(t){var n=t.children;return n?n[n.length-1]:t.t}function c(t,n,e){var i=e/(n.i-t.i);n.c-=i,n.s+=e,t.c+=i,n.z+=e,n.m+=e}function a(t,n,e){return t.a.parent===n.parent?t.a:e}function s(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}s.prototype=Object.create(i.a.prototype),n.a=function(){var t=r,n=1,e=1,i=null;function f(r){var u=function(t){for(var n,e,i,r,u,o=new s(t,0),c=[o];n=c.pop();)if(i=n._.children)for(n.children=new Array(u=i.length),r=u-1;r>=0;--r)c.push(e=n.children[r]=new s(i[r],r)),e.parent=n;return(o.parent=new s(null,0)).children=[o],o}(r);if(u.eachAfter(h),u.parent.m=-u.z,u.eachBefore(l),i)r.eachBefore(p);else{var o=r,c=r,a=r;r.eachBefore((function(t){t.x<o.x&&(o=t),t.x>c.x&&(c=t),t.depth>a.depth&&(a=t)}));var f=o===c?1:t(o,c)/2,_=f-o.x,b=n/(c.x+f+_),d=e/(a.depth||1);r.eachBefore((function(t){t.x=(t.x+_)*b,t.y=t.depth*d}))}return r}function h(n){var e=n.children,i=n.parent.children,r=n.i?i[n.i-1]:null;if(e){!function(t){for(var n,e=0,i=0,r=t.children,u=r.length;--u>=0;)(n=r[u]).z+=e,n.m+=e,e+=n.s+(i+=n.c)}(n);var s=(e[0].z+e[e.length-1].z)/2;r?(n.z=r.z+t(n._,r._),n.m=n.z-s):n.z=s}else r&&(n.z=r.z+t(n._,r._));n.parent.A=function(n,e,i){if(e){for(var r,s=n,f=n,h=e,l=s.parent.children[0],p=s.m,_=f.m,b=h.m,d=l.m;h=o(h),s=u(s),h&&s;)l=u(l),(f=o(f)).a=n,(r=h.z+b-s.z-p+t(h._,s._))>0&&(c(a(h,n,i),n,r),p+=r,_+=r),b+=h.m,p+=s.m,d+=l.m,_+=f.m;h&&!o(f)&&(f.t=h,f.m+=b-_),s&&!u(l)&&(l.t=s,l.m+=p-d,i=n)}return i}(n,r,n.parent.A||i[0])}function l(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function p(t){t.x*=n,t.y=t.depth*e}return f.separation=function(n){return arguments.length?(t=n,f):t},f.size=function(t){return arguments.length?(i=!1,n=+t[0],e=+t[1],f):i?null:[n,e]},f.nodeSize=function(t){return arguments.length?(i=!0,n=+t[0],e=+t[1],f):i?[n,e]:null},f}},956:function(t,n,e){"use strict";var i=e(953),r=e(804),u=e(863),o=e(951);n.a=function(){var t=r.a,n=!1,e=1,c=1,a=[0],s=o.a,f=o.a,h=o.a,l=o.a,p=o.a;function _(t){return t.x0=t.y0=0,t.x1=e,t.y1=c,t.eachBefore(b),a=[0],n&&t.eachBefore(i.a),t}function b(n){var e=a[n.depth],i=n.x0+e,r=n.y0+e,u=n.x1-e,o=n.y1-e;u<i&&(i=u=(i+u)/2),o<r&&(r=o=(r+o)/2),n.x0=i,n.y0=r,n.x1=u,n.y1=o,n.children&&(e=a[n.depth+1]=s(n)/2,i+=p(n)-e,r+=f(n)-e,(u-=h(n)-e)<i&&(i=u=(i+u)/2),(o-=l(n)-e)<r&&(r=o=(r+o)/2),t(n,i,r,u,o))}return _.round=function(t){return arguments.length?(n=!!t,_):n},_.size=function(t){return arguments.length?(e=+t[0],c=+t[1],_):[e,c]},_.tile=function(n){return arguments.length?(t=Object(u.b)(n),_):t},_.padding=function(t){return arguments.length?_.paddingInner(t).paddingOuter(t):_.paddingInner()},_.paddingInner=function(t){return arguments.length?(s="function"==typeof t?t:Object(o.b)(+t),_):s},_.paddingOuter=function(t){return arguments.length?_.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):_.paddingTop()},_.paddingTop=function(t){return arguments.length?(f="function"==typeof t?t:Object(o.b)(+t),_):f},_.paddingRight=function(t){return arguments.length?(h="function"==typeof t?t:Object(o.b)(+t),_):h},_.paddingBottom=function(t){return arguments.length?(l="function"==typeof t?t:Object(o.b)(+t),_):l},_.paddingLeft=function(t){return arguments.length?(p="function"==typeof t?t:Object(o.b)(+t),_):p},_}},957:function(t,n,e){"use strict";n.a=function(t,n,e,i,r){var u,o,c=t.children,a=c.length,s=new Array(a+1);for(s[0]=o=u=0;u<a;++u)s[u+1]=o+=c[u].value;!function t(n,e,i,r,u,o,a){if(n>=e-1){var f=c[n];return f.x0=r,f.y0=u,f.x1=o,void(f.y1=a)}var h=s[n],l=i/2+h,p=n+1,_=e-1;for(;p<_;){var b=p+_>>>1;s[b]<l?p=b+1:_=b}l-s[p-1]<s[p]-l&&n+1<p&&--p;var d=s[p]-h,v=i-d;if(o-r>a-u){var g=(r*v+o*d)/i;t(n,p,d,r,u,g,a),t(p,e,v,g,u,o,a)}else{var y=(u*v+a*d)/i;t(n,p,d,r,u,o,y),t(p,e,v,r,y,o,a)}}(0,a,t.value,n,e,i,r)}},958:function(t,n,e){"use strict";var i=e(760),r=e(782);n.a=function(t,n,e,u,o){(1&t.depth?r.a:i.a)(t,n,e,u,o)}},959:function(t,n,e){"use strict";var i=e(760),r=e(782),u=e(804);n.a=function t(n){function e(t,e,o,c,a){if((s=t._squarify)&&s.ratio===n)for(var s,f,h,l,p,_=-1,b=s.length,d=t.value;++_<b;){for(h=(f=s[_]).children,l=f.value=0,p=h.length;l<p;++l)f.value+=h[l].value;f.dice?Object(i.a)(f,e,o,c,o+=(a-o)*f.value/d):Object(r.a)(f,e,o,e+=(c-e)*f.value/d,a),d-=f.value}else t._squarify=s=Object(u.c)(n,t,e,o,c,a),s.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(u.b)},960:function(t,n,e){"use strict";n.a=function(t,n){return t=+t,n=+n,function(e){return Math.round(t*(1-e)+n*e)}}},961:function(t,n,e){"use strict";var i=Math.SQRT2;function r(t){return((t=Math.exp(t))+1/t)/2}n.a=function(t,n){var e,u,o=t[0],c=t[1],a=t[2],s=n[0],f=n[1],h=n[2],l=s-o,p=f-c,_=l*l+p*p;if(_<1e-12)u=Math.log(h/a)/i,e=function(t){return[o+t*l,c+t*p,a*Math.exp(i*t*u)]};else{var b=Math.sqrt(_),d=(h*h-a*a+4*_)/(2*a*2*b),v=(h*h-a*a-4*_)/(2*h*2*b),g=Math.log(Math.sqrt(d*d+1)-d),y=Math.log(Math.sqrt(v*v+1)-v);u=(y-g)/i,e=function(t){var n,e=t*u,s=r(g),f=a/(2*b)*(s*(n=i*e+g,((n=Math.exp(2*n))-1)/(n+1))-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[o+f*l,c+f*p,a*s/r(i*e+g)]}}return e.duration=1e3*u,e}},962:function(t,n,e){"use strict";function i(t,n){for(var e=0,i=n.length-1,r=n[0],u=new Array(i<0?0:i);e<i;)u[e]=t(r,r=n[++e]);return function(t){var n=Math.max(0,Math.min(i-1,Math.floor(t*=i)));return u[n](t-n)}}e.d(n,"a",(function(){return i}))},963:function(t,n,e){"use strict";var i=e(932),r=e(748),u=e(785);function o(t){return t.innerRadius}function c(t){return t.outerRadius}function a(t){return t.startAngle}function s(t){return t.endAngle}function f(t){return t&&t.padAngle}function h(t,n,e,i,r,o,c,a){var s=e-t,f=i-n,h=c-r,l=a-o,p=l*s-h*f;if(!(p*p<u.f))return[t+(p=(h*(n-o)-l*(t-r))/p)*s,n+p*f]}function l(t,n,e,i,r,o,c){var a=t-e,s=n-i,f=(c?o:-o)/Object(u.l)(a*a+s*s),h=f*s,l=-f*a,p=t+h,_=n+l,b=e+h,d=i+l,v=(p+b)/2,g=(_+d)/2,y=b-p,x=d-_,j=y*y+x*x,O=r-o,w=p*d-b*_,m=(x<0?-1:1)*Object(u.l)(Object(u.h)(0,O*O*j-w*w)),M=(w*x-y*m)/j,T=(-w*y-x*m)/j,N=(w*x+y*m)/j,S=(-w*y+x*m)/j,E=M-v,k=T-g,C=N-v,A=S-g;return E*E+k*k>C*C+A*A&&(M=N,T=S),{cx:M,cy:T,x01:-h,y01:-l,x11:M*(r/O-1),y11:T*(r/O-1)}}n.a=function(){var t=o,n=c,e=Object(r.a)(0),p=null,_=a,b=s,d=f,v=null;function g(){var r,o,c=+t.apply(this,arguments),a=+n.apply(this,arguments),s=_.apply(this,arguments)-u.g,f=b.apply(this,arguments)-u.g,g=Object(u.a)(f-s),y=f>s;if(v||(v=r=Object(i.a)()),a<c&&(o=a,a=c,c=o),a>u.f)if(g>u.m-u.f)v.moveTo(a*Object(u.e)(s),a*Object(u.k)(s)),v.arc(0,0,a,s,f,!y),c>u.f&&(v.moveTo(c*Object(u.e)(f),c*Object(u.k)(f)),v.arc(0,0,c,f,s,y));else{var x,j,O=s,w=f,m=s,M=f,T=g,N=g,S=d.apply(this,arguments)/2,E=S>u.f&&(p?+p.apply(this,arguments):Object(u.l)(c*c+a*a)),k=Object(u.i)(Object(u.a)(a-c)/2,+e.apply(this,arguments)),C=k,A=k;if(E>u.f){var U=Object(u.c)(E/c*Object(u.k)(S)),D=Object(u.c)(E/a*Object(u.k)(S));(T-=2*U)>u.f?(m+=U*=y?1:-1,M-=U):(T=0,m=M=(s+f)/2),(N-=2*D)>u.f?(O+=D*=y?1:-1,w-=D):(N=0,O=w=(s+f)/2)}var q=a*Object(u.e)(O),z=a*Object(u.k)(O),P=c*Object(u.e)(M),F=c*Object(u.k)(M);if(k>u.f){var Y,H=a*Object(u.e)(w),L=a*Object(u.k)(w),R=c*Object(u.e)(m),B=c*Object(u.k)(m);if(g<u.j&&(Y=h(q,z,R,B,H,L,P,F))){var X=q-Y[0],I=z-Y[1],Z=H-Y[0],V=L-Y[1],$=1/Object(u.k)(Object(u.b)((X*Z+I*V)/(Object(u.l)(X*X+I*I)*Object(u.l)(Z*Z+V*V)))/2),W=Object(u.l)(Y[0]*Y[0]+Y[1]*Y[1]);C=Object(u.i)(k,(c-W)/($-1)),A=Object(u.i)(k,(a-W)/($+1))}}N>u.f?A>u.f?(x=l(R,B,q,z,a,A,y),j=l(H,L,P,F,a,A,y),v.moveTo(x.cx+x.x01,x.cy+x.y01),A<k?v.arc(x.cx,x.cy,A,Object(u.d)(x.y01,x.x01),Object(u.d)(j.y01,j.x01),!y):(v.arc(x.cx,x.cy,A,Object(u.d)(x.y01,x.x01),Object(u.d)(x.y11,x.x11),!y),v.arc(0,0,a,Object(u.d)(x.cy+x.y11,x.cx+x.x11),Object(u.d)(j.cy+j.y11,j.cx+j.x11),!y),v.arc(j.cx,j.cy,A,Object(u.d)(j.y11,j.x11),Object(u.d)(j.y01,j.x01),!y))):(v.moveTo(q,z),v.arc(0,0,a,O,w,!y)):v.moveTo(q,z),c>u.f&&T>u.f?C>u.f?(x=l(P,F,H,L,c,-C,y),j=l(q,z,R,B,c,-C,y),v.lineTo(x.cx+x.x01,x.cy+x.y01),C<k?v.arc(x.cx,x.cy,C,Object(u.d)(x.y01,x.x01),Object(u.d)(j.y01,j.x01),!y):(v.arc(x.cx,x.cy,C,Object(u.d)(x.y01,x.x01),Object(u.d)(x.y11,x.x11),!y),v.arc(0,0,c,Object(u.d)(x.cy+x.y11,x.cx+x.x11),Object(u.d)(j.cy+j.y11,j.cx+j.x11),y),v.arc(j.cx,j.cy,C,Object(u.d)(j.y11,j.x11),Object(u.d)(j.y01,j.x01),!y))):v.arc(0,0,c,M,m,y):v.lineTo(P,F)}else v.moveTo(0,0);if(v.closePath(),r)return v=null,r+""||null}return g.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,i=(+_.apply(this,arguments)+ +b.apply(this,arguments))/2-u.j/2;return[Object(u.e)(i)*e,Object(u.k)(i)*e]},g.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:Object(r.a)(+n),g):t},g.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:Object(r.a)(+t),g):n},g.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:Object(r.a)(+t),g):e},g.padRadius=function(t){return arguments.length?(p=null==t?null:"function"==typeof t?t:Object(r.a)(+t),g):p},g.startAngle=function(t){return arguments.length?(_="function"==typeof t?t:Object(r.a)(+t),g):_},g.endAngle=function(t){return arguments.length?(b="function"==typeof t?t:Object(r.a)(+t),g):b},g.padAngle=function(t){return arguments.length?(d="function"==typeof t?t:Object(r.a)(+t),g):d},g.context=function(t){return arguments.length?(v=null==t?null:t,g):v},g}},964:function(t,n,e){"use strict";var i=e(806),r=e(787);function u(t){this._context=t}u.prototype={areaStart:i.a,areaEnd:i.a,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Object(r.c)(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},n.a=function(t){return new u(t)}},965:function(t,n,e){"use strict";var i=e(787);function r(t){this._context=t}r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:Object(i.c)(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},n.a=function(t){return new r(t)}},966:function(t,n,e){"use strict";var i=e(787);function r(t,n){this._basis=new i.a(t),this._beta=n}r.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var i,r=t[0],u=n[0],o=t[e]-r,c=n[e]-u,a=-1;++a<=e;)i=a/e,this._basis.point(this._beta*t[a]+(1-this._beta)*(r+i*o),this._beta*n[a]+(1-this._beta)*(u+i*c));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}},n.a=function t(n){function e(t){return 1===n?new i.a(t):new r(t,n)}return e.beta=function(n){return t(+n)},e}(.85)},967:function(t,n,e){"use strict";var i=e(887),r=e(806),u=e(807);function o(t,n){this._context=t,this._alpha=n}o.prototype={areaStart:r.a,areaEnd:r.a,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,i=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+i*i,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Object(u.b)(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.a=function t(n){function e(t){return n?new o(t,n):new i.a(t,0)}return e.alpha=function(n){return t(+n)},e}(.5)},968:function(t,n,e){"use strict";var i=e(888),r=e(807);function u(t,n){this._context=t,this._alpha=n}u.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,i=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+i*i,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Object(r.b)(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.a=function t(n){function e(t){return n?new u(t,n):new i.a(t,0)}return e.alpha=function(n){return t(+n)},e}(.5)},969:function(t,n,e){"use strict";var i=e(806);function r(t){this._context=t}r.prototype={areaStart:i.a,areaEnd:i.a,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}},n.a=function(t){return new r(t)}},970:function(t,n,e){"use strict";function i(t){this._context=t}function r(t){var n,e,i=t.length-1,r=new Array(i),u=new Array(i),o=new Array(i);for(r[0]=0,u[0]=2,o[0]=t[0]+2*t[1],n=1;n<i-1;++n)r[n]=1,u[n]=4,o[n]=4*t[n]+2*t[n+1];for(r[i-1]=2,u[i-1]=7,o[i-1]=8*t[i-1]+t[i],n=1;n<i;++n)e=r[n]/u[n-1],u[n]-=e,o[n]-=e*o[n-1];for(r[i-1]=o[i-1]/u[i-1],n=i-2;n>=0;--n)r[n]=(o[n]-r[n+1])/u[n];for(u[i-1]=(t[i]+r[i-1])/2,n=0;n<i-1;++n)u[n]=2*t[n+1]-r[n+1];return[r,u]}i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var i=r(t),u=r(n),o=0,c=1;c<e;++o,++c)this._context.bezierCurveTo(i[0][o],u[0][o],i[1][o],u[1][o],t[c],n[c]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}},n.a=function(t){return new i(t)}},971:function(t,n,e){"use strict";var i=e(756);n.a=function(t,n,e){var r=new i.a,u=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?Object(i.b)():+e,r.restart((function i(o){o+=u,r.restart(i,u+=n,e),t(o)}),n,e),r)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{177:function(e,t){var a,n;a=Prism,n=/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,a.languages.cpp=a.languages.extend("c",{"class-name":[{pattern:RegExp("(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+".replace(/<keyword>/g,(function(){return n.source}))),lookbehind:!0},/\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,/\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,/\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],keyword:n,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+\.?[\da-f']*|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+\.?[\d']*|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]*/i,greedy:!0},operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:true|false)\b/}),a.languages.insertBefore("cpp","string",{"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),a.languages.insertBefore("cpp","class-name",{"base-clause":{pattern:/(\b(?:class|struct)\s+\w+\s*:\s*)(?:[^;{}"'])+?(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:a.languages.extend("cpp",{})}}),a.languages.insertBefore("inside","operator",{"class-name":/\b[a-z_]\w*\b(?!\s*::)/i},a.languages.cpp["base-clause"])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWNwcC5taW4uanMiXSwibmFtZXMiOlsiZSIsInQiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNwcCIsImV4dGVuZCIsInBhdHRlcm4iLCJSZWdFeHAiLCJyZXBsYWNlIiwic291cmNlIiwibG9va2JlaGluZCIsImtleXdvcmQiLCJudW1iZXIiLCJncmVlZHkiLCJvcGVyYXRvciIsImJvb2xlYW4iLCJpbnNlcnRCZWZvcmUiLCJhbGlhcyIsImluc2lkZSJdLCJtYXBwaW5ncyI6IjRFQUFDLElBQVNBLEVBQU9DLEVBQVBELEVBQTZ2REUsTUFBdHZERCxFQUFFLHVxQkFBdXFCRCxFQUFFRyxVQUFVQyxJQUFJSixFQUFFRyxVQUFVRSxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQ0MsUUFBUUMsT0FBTyxtRUFBbUVDLFFBQVEsY0FBYSxXQUFXLE9BQU9QLEVBQUVRLFdBQVVDLFlBQVcsR0FBSSxpQ0FBaUMsb0NBQW9DLGdFQUFnRUMsUUFBUVYsRUFBRVcsT0FBTyxDQUFDTixRQUFRLHFJQUFxSU8sUUFBTyxHQUFJQyxTQUFTLHFIQUFxSEMsUUFBUSx1QkFBdUJmLEVBQUVHLFVBQVVhLGFBQWEsTUFBTSxTQUFTLENBQUMsYUFBYSxDQUFDVixRQUFRLG9DQUFvQ1csTUFBTSxTQUFTSixRQUFPLEtBQU1iLEVBQUVHLFVBQVVhLGFBQWEsTUFBTSxhQUFhLENBQUMsY0FBYyxDQUFDVixRQUFRLDZEQUE2REksWUFBVyxFQUFHRyxRQUFPLEVBQUdLLE9BQU9sQixFQUFFRyxVQUFVRSxPQUFPLE1BQU0sT0FBT0wsRUFBRUcsVUFBVWEsYUFBYSxTQUFTLFdBQVcsQ0FBQyxhQUFhLDJCQUEyQmhCLEVBQUVHLFVBQVVDLElBQUkiLCJmaWxlIjoiNzIuaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIhZnVuY3Rpb24oZSl7dmFyIHQ9L1xcYig/OmFsaWduYXN8YWxpZ25vZnxhc218YXV0b3xib29sfGJyZWFrfGNhc2V8Y2F0Y2h8Y2hhcnxjaGFyOF90fGNoYXIxNl90fGNoYXIzMl90fGNsYXNzfGNvbXBsfGNvbmNlcHR8Y29uc3R8Y29uc3RldmFsfGNvbnN0ZXhwcnxjb25zdGluaXR8Y29uc3RfY2FzdHxjb250aW51ZXxjb19hd2FpdHxjb19yZXR1cm58Y29feWllbGR8ZGVjbHR5cGV8ZGVmYXVsdHxkZWxldGV8ZG98ZG91YmxlfGR5bmFtaWNfY2FzdHxlbHNlfGVudW18ZXhwbGljaXR8ZXhwb3J0fGV4dGVybnxmbG9hdHxmb3J8ZnJpZW5kfGdvdG98aWZ8aW5saW5lfGludHxpbnQ4X3R8aW50MTZfdHxpbnQzMl90fGludDY0X3R8dWludDhfdHx1aW50MTZfdHx1aW50MzJfdHx1aW50NjRfdHxsb25nfG11dGFibGV8bmFtZXNwYWNlfG5ld3xub2V4Y2VwdHxudWxscHRyfG9wZXJhdG9yfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xyZWdpc3RlcnxyZWludGVycHJldF9jYXN0fHJlcXVpcmVzfHJldHVybnxzaG9ydHxzaWduZWR8c2l6ZW9mfHN0YXRpY3xzdGF0aWNfYXNzZXJ0fHN0YXRpY19jYXN0fHN0cnVjdHxzd2l0Y2h8dGVtcGxhdGV8dGhpc3x0aHJlYWRfbG9jYWx8dGhyb3d8dHJ5fHR5cGVkZWZ8dHlwZWlkfHR5cGVuYW1lfHVuaW9ufHVuc2lnbmVkfHVzaW5nfHZpcnR1YWx8dm9pZHx2b2xhdGlsZXx3Y2hhcl90fHdoaWxlKVxcYi87ZS5sYW5ndWFnZXMuY3BwPWUubGFuZ3VhZ2VzLmV4dGVuZChcImNcIix7XCJjbGFzcy1uYW1lXCI6W3twYXR0ZXJuOlJlZ0V4cChcIihcXFxcYig/OmNsYXNzfGNvbmNlcHR8ZW51bXxzdHJ1Y3R8dHlwZW5hbWUpXFxcXHMrKSg/ITxrZXl3b3JkPilcXFxcdytcIi5yZXBsYWNlKC88a2V5d29yZD4vZyxmdW5jdGlvbigpe3JldHVybiB0LnNvdXJjZX0pKSxsb29rYmVoaW5kOiEwfSwvXFxiW0EtWl1cXHcqKD89XFxzKjo6XFxzKlxcdytcXHMqXFwoKS8sL1xcYltBLVpfXVxcdyooPz1cXHMqOjpcXHMqflxcdytcXHMqXFwoKS9pLC9cXHcrKD89XFxzKjwoPzpbXjw+XXw8KD86W148Pl18PFtePD5dKj4pKj4pKj5cXHMqOjpcXHMqXFx3K1xccypcXCgpL10sa2V5d29yZDp0LG51bWJlcjp7cGF0dGVybjovKD86XFxiMGJbMDEnXSt8XFxiMHgoPzpbXFxkYS1mJ10rXFwuP1tcXGRhLWYnXSp8XFwuW1xcZGEtZiddKykoPzpwWystXT9bXFxkJ10rKT98KD86XFxiW1xcZCddK1xcLj9bXFxkJ10qfFxcQlxcLltcXGQnXSspKD86ZVsrLV0/W1xcZCddKyk/KVtmdWxdKi9pLGdyZWVkeTohMH0sb3BlcmF0b3I6Lz4+PT98PDw9P3wtPnwoWy0rJnw6XSlcXDF8Wz86fl18PD0+fFstKyovJSZ8XiE9PD5dPT98XFxiKD86YW5kfGFuZF9lcXxiaXRhbmR8Yml0b3J8bm90fG5vdF9lcXxvcnxvcl9lcXx4b3J8eG9yX2VxKVxcYi8sYm9vbGVhbjovXFxiKD86dHJ1ZXxmYWxzZSlcXGIvfSksZS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKFwiY3BwXCIsXCJzdHJpbmdcIix7XCJyYXctc3RyaW5nXCI6e3BhdHRlcm46L1JcIihbXigpXFxcXCBdezAsMTZ9KVxcKFtcXHNcXFNdKj9cXClcXDFcIi8sYWxpYXM6XCJzdHJpbmdcIixncmVlZHk6ITB9fSksZS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKFwiY3BwXCIsXCJjbGFzcy1uYW1lXCIse1wiYmFzZS1jbGF1c2VcIjp7cGF0dGVybjovKFxcYig/OmNsYXNzfHN0cnVjdClcXHMrXFx3K1xccyo6XFxzKikoPzpbXjt7fVwiJ10pKz8oPz1cXHMqWzt7XSkvLGxvb2tiZWhpbmQ6ITAsZ3JlZWR5OiEwLGluc2lkZTplLmxhbmd1YWdlcy5leHRlbmQoXCJjcHBcIix7fSl9fSksZS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKFwiaW5zaWRlXCIsXCJvcGVyYXRvclwiLHtcImNsYXNzLW5hbWVcIjovXFxiW2Etel9dXFx3KlxcYig/IVxccyo6OikvaX0sZS5sYW5ndWFnZXMuY3BwW1wiYmFzZS1jbGF1c2VcIl0pfShQcmlzbSk7Il0sInNvdXJjZVJvb3QiOiIifQ==
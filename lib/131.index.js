(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{236:function(e,n){!function(e){for(var n=/[^<()"']|\((?:<expr>)*\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|"(?:[^\\"]|\\.)*"|'(?:[^\\']|\\.)*'/.source,t=0;t<2;t++)n=n.replace(/<expr>/g,(function(){return n}));n=n.replace(/<expr>/g,/[^\s\S]/.source);var r={comment:/<#--[\s\S]*?-->/,string:[{pattern:/\br("|')(?:(?!\1)[^\\]|\\.)*\1/,greedy:!0},{pattern:RegExp(/("|')(?:(?!\1|\$\{)[^\\]|\\.|\$\{(?:<expr>)*?\})*\1/.source.replace(/<expr>/g,(function(){return n}))),greedy:!0,inside:{interpolation:{pattern:RegExp(/((?:^|[^\\])(?:\\\\)*)\$\{(?:<expr>)*?\}/.source.replace(/<expr>/g,(function(){return n}))),lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:null}}}}],keyword:/\b(?:as)\b/,boolean:/\b(?:true|false)\b/,"builtin-function":{pattern:/((?:^|[^?])\?\s*)\w+/,lookbehind:!0,alias:"function"},function:/\w+(?=\s*\()/,number:/\d+(?:\.\d+)?/,operator:/\.\.[<*!]?|->|--|\+\+|&&|\|\||\?{1,2}|[-+*/%!=<>]=?|\b(?:gt|gte|lt|lte)\b/,punctuation:/[,;.:()[\]{}]/};r.string[1].inside.interpolation.inside.rest=r,e.languages.ftl={"ftl-comment":{pattern:/^<#--[\s\S]*/,alias:"comment"},"ftl-directive":{pattern:/^<[\s\S]+>$/,inside:{directive:{pattern:/(^<\/?)[#@][a-z]\w*/i,lookbehind:!0,alias:"keyword"},punctuation:/^<\/?|\/?>$/,content:{pattern:/[\s\S]*\S[\s\S]*/,alias:"ftl",inside:r}}},"ftl-interpolation":{pattern:/^\$\{[\s\S]*\}$/,inside:{punctuation:/^\$\{|\}$/,content:{pattern:/[\s\S]*\S[\s\S]*/,alias:"ftl",inside:r}}}},e.hooks.add("before-tokenize",(function(t){var r=RegExp(/<#--[\s\S]*?-->|<\/?[#@][a-zA-Z](?:<expr>)*?>|\$\{(?:<expr>)*?\}/.source.replace(/<expr>/g,(function(){return n})),"gi");e.languages["markup-templating"].buildPlaceholders(t,"ftl",r)})),e.hooks.add("after-tokenize",(function(n){e.languages["markup-templating"].tokenizePlaceholders(n,"ftl")}))}(Prism)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWZ0bC5qcyJdLCJuYW1lcyI6WyJQcmlzbSIsIkZUTF9FWFBSIiwic291cmNlIiwiaSIsInJlcGxhY2UiLCJmdGwiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiUmVnRXhwIiwiaW5zaWRlIiwibG9va2JlaGluZCIsImFsaWFzIiwicmVzdCIsInN0cmluZyIsImludGVycG9sYXRpb24iLCJsYW5ndWFnZXMiLCJob29rcyIsImFkZCIsImVudiIsImJ1aWxkUGxhY2Vob2xkZXJzIiwidG9rZW5pemVQbGFjZWhvbGRlcnMiXSwibWFwcGluZ3MiOiI4RUFBQyxTQUFVQSxHQU1WLElBREEsSUFBSUMsRUFBVyxpR0FBaUdDLE9BQ3ZHQyxFQUFJLEVBQUdBLEVBQUksRUFBR0EsSUFDdEJGLEVBQVdBLEVBQVNHLFFBQVEsV0FBVyxXQUFjLE9BQU9ILEtBRTdEQSxFQUFXQSxFQUFTRyxRQUFRLFVBQVcsVUFBVUYsUUFFakQsSUFBSUcsRUFBTSxDQUNULFFBQVcsa0JBQ1gsT0FBVSxDQUNULENBRUNDLFFBQVMsaUNBQ1RDLFFBQVEsR0FFVCxDQUNDRCxRQUFTRSxPQUFPLHNEQUFzRE4sT0FBT0UsUUFBUSxXQUFXLFdBQWMsT0FBT0gsTUFDckhNLFFBQVEsRUFDUkUsT0FBUSxDQUNQLGNBQWlCLENBQ2hCSCxRQUFTRSxPQUFPLDJDQUEyQ04sT0FBT0UsUUFBUSxXQUFXLFdBQWMsT0FBT0gsTUFDMUdTLFlBQVksRUFDWkQsT0FBUSxDQUNQLDRCQUE2QixDQUM1QkgsUUFBUyxZQUNUSyxNQUFPLGVBRVJDLEtBQU0sVUFNWCxRQUFXLGFBQ1gsUUFBVyxxQkFDWCxtQkFBb0IsQ0FDbkJOLFFBQVMsdUJBQ1RJLFlBQVksRUFDWkMsTUFBTyxZQUVSLFNBQVksZUFDWixPQUFVLGdCQUNWLFNBQVksNEVBQ1osWUFBZSxpQkFHaEJOLEVBQUlRLE9BQU8sR0FBR0osT0FBT0ssY0FBY0wsT0FBT0csS0FBT1AsRUFFakRMLEVBQU1lLFVBQVVWLElBQU0sQ0FDckIsY0FBZSxDQUVkQyxRQUFTLGVBQ1RLLE1BQU8sV0FFUixnQkFBaUIsQ0FDaEJMLFFBQVMsY0FDVEcsT0FBUSxDQUNQLFVBQWEsQ0FDWkgsUUFBUyx1QkFDVEksWUFBWSxFQUNaQyxNQUFPLFdBRVIsWUFBZSxjQUNmLFFBQVcsQ0FDVkwsUUFBUyxtQkFDVEssTUFBTyxNQUNQRixPQUFRSixLQUlYLG9CQUFxQixDQUNwQkMsUUFBUyxrQkFDVEcsT0FBUSxDQUNQLFlBQWUsWUFDZixRQUFXLENBQ1ZILFFBQVMsbUJBQ1RLLE1BQU8sTUFDUEYsT0FBUUosTUFNWkwsRUFBTWdCLE1BQU1DLElBQUksbUJBQW1CLFNBQVVDLEdBQzVDLElBQUlaLEVBQVVFLE9BQU8sbUVBQW1FTixPQUFPRSxRQUFRLFdBQVcsV0FBYyxPQUFPSCxLQUFjLE1BQ3JKRCxFQUFNZSxVQUFVLHFCQUFxQkksa0JBQWtCRCxFQUFLLE1BQU9aLE1BR3BFTixFQUFNZ0IsTUFBTUMsSUFBSSxrQkFBa0IsU0FBVUMsR0FDM0NsQixFQUFNZSxVQUFVLHFCQUFxQksscUJBQXFCRixFQUFLLFVBN0ZqRSxDQWdHRWxCIiwiZmlsZSI6IjEzMS5pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoUHJpc20pIHtcblxuXHQvLyBodHRwczovL2ZyZWVtYXJrZXIuYXBhY2hlLm9yZy9kb2NzL2RndWlfdGVtcGxhdGVfZXhwLmh0bWxcblxuXHQvLyBGVEwgZXhwcmVzc2lvbiB3aXRoIDQgbGV2ZWxzIG9mIG5lc3Rpbmcgc3VwcG9ydGVkXG5cdHZhciBGVExfRVhQUiA9IC9bXjwoKVwiJ118XFwoKD86PGV4cHI+KSpcXCl8PCg/ISMtLSl8PCMtLSg/OlteLV18LSg/IS0+KSkqLS0+fFwiKD86W15cXFxcXCJdfFxcXFwuKSpcInwnKD86W15cXFxcJ118XFxcXC4pKicvLnNvdXJjZTtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCAyOyBpKyspIHtcblx0XHRGVExfRVhQUiA9IEZUTF9FWFBSLnJlcGxhY2UoLzxleHByPi9nLCBmdW5jdGlvbiAoKSB7IHJldHVybiBGVExfRVhQUjsgfSk7XG5cdH1cblx0RlRMX0VYUFIgPSBGVExfRVhQUi5yZXBsYWNlKC88ZXhwcj4vZywgL1teXFxzXFxTXS8uc291cmNlKTtcblxuXHR2YXIgZnRsID0ge1xuXHRcdCdjb21tZW50JzogLzwjLS1bXFxzXFxTXSo/LS0+Lyxcblx0XHQnc3RyaW5nJzogW1xuXHRcdFx0e1xuXHRcdFx0XHQvLyByYXcgc3RyaW5nXG5cdFx0XHRcdHBhdHRlcm46IC9cXGJyKFwifCcpKD86KD8hXFwxKVteXFxcXF18XFxcXC4pKlxcMS8sXG5cdFx0XHRcdGdyZWVkeTogdHJ1ZVxuXHRcdFx0fSxcblx0XHRcdHtcblx0XHRcdFx0cGF0dGVybjogUmVnRXhwKC8oXCJ8JykoPzooPyFcXDF8XFwkXFx7KVteXFxcXF18XFxcXC58XFwkXFx7KD86PGV4cHI+KSo/XFx9KSpcXDEvLnNvdXJjZS5yZXBsYWNlKC88ZXhwcj4vZywgZnVuY3Rpb24gKCkgeyByZXR1cm4gRlRMX0VYUFI7IH0pKSxcblx0XHRcdFx0Z3JlZWR5OiB0cnVlLFxuXHRcdFx0XHRpbnNpZGU6IHtcblx0XHRcdFx0XHQnaW50ZXJwb2xhdGlvbic6IHtcblx0XHRcdFx0XHRcdHBhdHRlcm46IFJlZ0V4cCgvKCg/Ol58W15cXFxcXSkoPzpcXFxcXFxcXCkqKVxcJFxceyg/OjxleHByPikqP1xcfS8uc291cmNlLnJlcGxhY2UoLzxleHByPi9nLCBmdW5jdGlvbiAoKSB7IHJldHVybiBGVExfRVhQUjsgfSkpLFxuXHRcdFx0XHRcdFx0bG9va2JlaGluZDogdHJ1ZSxcblx0XHRcdFx0XHRcdGluc2lkZToge1xuXHRcdFx0XHRcdFx0XHQnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcblx0XHRcdFx0XHRcdFx0XHRwYXR0ZXJuOiAvXlxcJFxce3xcXH0kLyxcblx0XHRcdFx0XHRcdFx0XHRhbGlhczogJ3B1bmN0dWF0aW9uJ1xuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHRyZXN0OiBudWxsXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XSxcblx0XHQna2V5d29yZCc6IC9cXGIoPzphcylcXGIvLFxuXHRcdCdib29sZWFuJzogL1xcYig/OnRydWV8ZmFsc2UpXFxiLyxcblx0XHQnYnVpbHRpbi1mdW5jdGlvbic6IHtcblx0XHRcdHBhdHRlcm46IC8oKD86XnxbXj9dKVxcP1xccyopXFx3Ky8sXG5cdFx0XHRsb29rYmVoaW5kOiB0cnVlLFxuXHRcdFx0YWxpYXM6ICdmdW5jdGlvbidcblx0XHR9LFxuXHRcdCdmdW5jdGlvbic6IC9cXHcrKD89XFxzKlxcKCkvLFxuXHRcdCdudW1iZXInOiAvXFxkKyg/OlxcLlxcZCspPy8sXG5cdFx0J29wZXJhdG9yJzogL1xcLlxcLls8KiFdP3wtPnwtLXxcXCtcXCt8JiZ8XFx8XFx8fFxcP3sxLDJ9fFstKyovJSE9PD5dPT98XFxiKD86Z3R8Z3RlfGx0fGx0ZSlcXGIvLFxuXHRcdCdwdW5jdHVhdGlvbic6IC9bLDsuOigpW1xcXXt9XS9cblx0fTtcblxuXHRmdGwuc3RyaW5nWzFdLmluc2lkZS5pbnRlcnBvbGF0aW9uLmluc2lkZS5yZXN0ID0gZnRsO1xuXG5cdFByaXNtLmxhbmd1YWdlcy5mdGwgPSB7XG5cdFx0J2Z0bC1jb21tZW50Jzoge1xuXHRcdFx0Ly8gdGhlIHBhdHRlcm4gaXMgc2hvcnRlbmVkIHRvIGJlIG1vcmUgZWZmaWNpZW50XG5cdFx0XHRwYXR0ZXJuOiAvXjwjLS1bXFxzXFxTXSovLFxuXHRcdFx0YWxpYXM6ICdjb21tZW50J1xuXHRcdH0sXG5cdFx0J2Z0bC1kaXJlY3RpdmUnOiB7XG5cdFx0XHRwYXR0ZXJuOiAvXjxbXFxzXFxTXSs+JC8sXG5cdFx0XHRpbnNpZGU6IHtcblx0XHRcdFx0J2RpcmVjdGl2ZSc6IHtcblx0XHRcdFx0XHRwYXR0ZXJuOiAvKF48XFwvPylbI0BdW2Etel1cXHcqL2ksXG5cdFx0XHRcdFx0bG9va2JlaGluZDogdHJ1ZSxcblx0XHRcdFx0XHRhbGlhczogJ2tleXdvcmQnXG5cdFx0XHRcdH0sXG5cdFx0XHRcdCdwdW5jdHVhdGlvbic6IC9ePFxcLz98XFwvPz4kLyxcblx0XHRcdFx0J2NvbnRlbnQnOiB7XG5cdFx0XHRcdFx0cGF0dGVybjogL1tcXHNcXFNdKlxcU1tcXHNcXFNdKi8sXG5cdFx0XHRcdFx0YWxpYXM6ICdmdGwnLFxuXHRcdFx0XHRcdGluc2lkZTogZnRsXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXHRcdCdmdGwtaW50ZXJwb2xhdGlvbic6IHtcblx0XHRcdHBhdHRlcm46IC9eXFwkXFx7W1xcc1xcU10qXFx9JC8sXG5cdFx0XHRpbnNpZGU6IHtcblx0XHRcdFx0J3B1bmN0dWF0aW9uJzogL15cXCRcXHt8XFx9JC8sXG5cdFx0XHRcdCdjb250ZW50Jzoge1xuXHRcdFx0XHRcdHBhdHRlcm46IC9bXFxzXFxTXSpcXFNbXFxzXFxTXSovLFxuXHRcdFx0XHRcdGFsaWFzOiAnZnRsJyxcblx0XHRcdFx0XHRpbnNpZGU6IGZ0bFxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXG5cdFByaXNtLmhvb2tzLmFkZCgnYmVmb3JlLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuXHRcdHZhciBwYXR0ZXJuID0gUmVnRXhwKC88Iy0tW1xcc1xcU10qPy0tPnw8XFwvP1sjQF1bYS16QS1aXSg/OjxleHByPikqPz58XFwkXFx7KD86PGV4cHI+KSo/XFx9Ly5zb3VyY2UucmVwbGFjZSgvPGV4cHI+L2csIGZ1bmN0aW9uICgpIHsgcmV0dXJuIEZUTF9FWFBSOyB9KSwgJ2dpJyk7XG5cdFx0UHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLmJ1aWxkUGxhY2Vob2xkZXJzKGVudiwgJ2Z0bCcsIHBhdHRlcm4pO1xuXHR9KTtcblxuXHRQcmlzbS5ob29rcy5hZGQoJ2FmdGVyLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuXHRcdFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS50b2tlbml6ZVBsYWNlaG9sZGVycyhlbnYsICdmdGwnKTtcblx0fSk7XG5cbn0oUHJpc20pKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=